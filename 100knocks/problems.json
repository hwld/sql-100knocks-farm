[{"no":1,"text":"S-001: レシート明細データ（receipt）から全項目の先頭10件を表示し、どのようなデータを保有しているか目視で確認せよ。","solutions":[{"no":1,"sql":"SELECT\n    *\nFROM receipt\nLIMIT 10\n;","expectedCsv":"sales_ymd,sales_epoch,store_cd,receipt_no,receipt_sub_no,customer_id,product_cd,quantity,amount\n20181103,1541203200,S14006,112,1,CS006214000001,P070305012,1,158\n20181118,1542499200,S13008,1132,2,CS008415000097,P070701017,1,81\n20170712,1499817600,S14028,1102,1,CS028414000014,P060101005,1,170\n20190205,1549324800,S14042,1132,1,ZZ000000000000,P050301001,1,25\n20180821,1534809600,S14025,1102,2,CS025415000050,P060102007,1,90\n20190605,1559692800,S13003,1112,1,CS003515000195,P050102002,1,138\n20181205,1543968000,S14024,1102,2,CS024514000042,P080101005,1,30\n20190922,1569110400,S14040,1102,1,CS040415000178,P070501004,1,128\n20170504,1493856000,S13020,1112,2,ZZ000000000000,P071302010,1,770\n20191010,1570665600,S14027,1102,1,CS027514000015,P071101003,1,680\n"}]},{"no":2,"text":"S-002: レシート明細データ（receipt）から売上年月日（sales_ymd）、顧客ID（customer_id）、商品コード（product_cd）、売上金額（amount）の順に列を指定し、10件表示せよ。","solutions":[{"no":1,"sql":"SELECT\n    sales_ymd,\n    customer_id,\n    product_cd,\n    amount\nFROM receipt\nLIMIT 10\n;","expectedCsv":"sales_ymd,customer_id,product_cd,amount\n20181103,CS006214000001,P070305012,158\n20181118,CS008415000097,P070701017,81\n20170712,CS028414000014,P060101005,170\n20190205,ZZ000000000000,P050301001,25\n20180821,CS025415000050,P060102007,90\n20190605,CS003515000195,P050102002,138\n20181205,CS024514000042,P080101005,30\n20190922,CS040415000178,P070501004,128\n20170504,ZZ000000000000,P071302010,770\n20191010,CS027514000015,P071101003,680\n"}]},{"no":3,"text":"S-003: レシート明細データ（receipt）から売上年月日（sales_ymd）、顧客ID（customer_id）、商品コード（product_cd）、売上金額（amount）の順に列を指定し、10件表示せよ。ただし、sales_ymdをsales_dateに項目名を変更しながら抽出すること。","solutions":[{"no":1,"sql":"SELECT\n    sales_ymd AS sales_date,\n    customer_id,\n    product_cd,\n    amount \nFROM receipt\nLIMIT 10\n;","expectedCsv":"sales_date,customer_id,product_cd,amount\n20181103,CS006214000001,P070305012,158\n20181118,CS008415000097,P070701017,81\n20170712,CS028414000014,P060101005,170\n20190205,ZZ000000000000,P050301001,25\n20180821,CS025415000050,P060102007,90\n20190605,CS003515000195,P050102002,138\n20181205,CS024514000042,P080101005,30\n20190922,CS040415000178,P070501004,128\n20170504,ZZ000000000000,P071302010,770\n20191010,CS027514000015,P071101003,680\n"}]},{"no":4,"text":"S-004: レシート明細データ（receipt）から売上日（sales_ymd）、顧客ID（customer_id）、商品コード（product_cd）、売上金額（amount）の順に列を指定し、以下の条件を満たすデータを抽出せよ。\n\n顧客ID（customer_id）が\"CS018205000001\"","solutions":[{"no":1,"sql":"SELECT\n    sales_ymd,\n    customer_id,\n    product_cd,\n    amount\nFROM\n    receipt\nWHERE\n    customer_id = 'CS018205000001'\n;","expectedCsv":"sales_ymd,customer_id,product_cd,amount\n20180911,CS018205000001,P071401012,2200\n20180414,CS018205000001,P060104007,600\n20170614,CS018205000001,P050206001,990\n20170614,CS018205000001,P060702015,108\n20190216,CS018205000001,P071005024,102\n20180414,CS018205000001,P071101002,278\n20190226,CS018205000001,P070902035,168\n20190924,CS018205000001,P060805001,495\n20190226,CS018205000001,P071401020,2200\n20180911,CS018205000001,P071401005,1100\n20190216,CS018205000001,P040101002,218\n20190924,CS018205000001,P091503001,280\n"}]},{"no":5,"text":"S-005: レシート明細データ（receipt）から売上日（sales_ymd）、顧客ID（customer_id）、商品コード（product_cd）、売上金額（amount）の順に列を指定し、以下の全ての条件を満たすデータを抽出せよ。\n\n顧客ID（customer_id）が\"CS018205000001\"\n売上金額（amount）が1,000以上","solutions":[{"no":1,"sql":"SELECT\n    sales_ymd,\n    customer_id,\n    product_cd,\n    amount\nFROM\n    receipt\nWHERE\n    customer_id = 'CS018205000001'\n    AND amount >= 1000\n;","expectedCsv":"sales_ymd,customer_id,product_cd,amount\n20180911,CS018205000001,P071401012,2200\n20190226,CS018205000001,P071401020,2200\n20180911,CS018205000001,P071401005,1100\n"}]},{"no":6,"text":"S-006: レシート明細データ（receipt）から売上日（sales_ymd）、顧客ID（customer_id）、商品コード（product_cd）、売上数量（quantity）、売上金額（amount）の順に列を指定し、以下の全ての条件を満たすデータを抽出せよ。\n\n顧客ID（customer_id）が\"CS018205000001\"\n売上金額（amount）が1,000以上または売上数量（quantity）が5以上","solutions":[{"no":1,"sql":"SELECT\n    sales_ymd,\n    customer_id,\n    product_cd,\n    quantity,\n    amount\nFROM\n    receipt\nWHERE\n    customer_id = 'CS018205000001'\n    AND\n    (\n        amount >= 1000\n        OR quantity >= 5\n    )\n;","expectedCsv":"sales_ymd,customer_id,product_cd,quantity,amount\n20180911,CS018205000001,P071401012,1,2200\n20180414,CS018205000001,P060104007,6,600\n20170614,CS018205000001,P050206001,5,990\n20190226,CS018205000001,P071401020,1,2200\n20180911,CS018205000001,P071401005,1,1100\n"}]},{"no":7,"text":"S-007: レシート明細データ（receipt）から売上日（sales_ymd）、顧客ID（customer_id）、商品コード（product_cd）、売上金額（amount）の順に列を指定し、以下の全ての条件を満たすデータを抽出せよ。\n\n顧客ID（customer_id）が\"CS018205000001\"\n売上金額（amount）が1,000以上2,000以下","solutions":[{"no":1,"sql":"SELECT\n    sales_ymd,\n    customer_id,\n    product_cd,\n    amount\nFROM\n    receipt\nWHERE\n    customer_id = 'CS018205000001'\n    AND amount BETWEEN 1000 AND 2000\n;","expectedCsv":"sales_ymd,customer_id,product_cd,amount\n20180911,CS018205000001,P071401005,1100\n"}]},{"no":8,"text":"S-008: レシート明細データ（receipt）から売上日（sales_ymd）、顧客ID（customer_id）、商品コード（product_cd）、売上金額（amount）の順に列を指定し、以下の全ての条件を満たすデータを抽出せよ。\n\n顧客ID（customer_id）が\"CS018205000001\"\n商品コード（product_cd）が\"P071401019\"以外","solutions":[{"no":1,"sql":"SELECT\n    sales_ymd,\n    customer_id,\n    product_cd, amount\nFROM\n    receipt\nWHERE\n    customer_id = 'CS018205000001'\n    AND product_cd != 'P071401019'\n;","expectedCsv":"sales_ymd,customer_id,product_cd,amount\n20180911,CS018205000001,P071401012,2200\n20180414,CS018205000001,P060104007,600\n20170614,CS018205000001,P050206001,990\n20170614,CS018205000001,P060702015,108\n20190216,CS018205000001,P071005024,102\n20180414,CS018205000001,P071101002,278\n20190226,CS018205000001,P070902035,168\n20190924,CS018205000001,P060805001,495\n20190226,CS018205000001,P071401020,2200\n20180911,CS018205000001,P071401005,1100\n20190216,CS018205000001,P040101002,218\n20190924,CS018205000001,P091503001,280\n"}]},{"no":9,"text":"S-009: 以下の処理において、出力結果を変えずにORをANDに書き換えよ。\nSELECT * FROM store WHERE NOT (prefecture_cd = '13' OR floor_area > 900)","solutions":[{"no":1,"sql":"SELECT * FROM store WHERE prefecture_cd != '13' AND floor_area <= 900;","expectedCsv":"store_cd,store_name,prefecture_cd,prefecture,address,address_kana,tel_no,longitude,latitude,floor_area\nS14046,北山田店,14,神奈川県,神奈川県横浜市都筑区北山田一丁目,カナガワケンヨコハマシツヅキクキタヤマタイッチョウメ,045-123-4049,139.5916,35.56189,831.0\nS14011,日吉本町店,14,神奈川県,神奈川県横浜市港北区日吉本町四丁目,カナガワケンヨコハマシコウホククヒヨシホンチョウヨンチョウメ,045-123-4033,139.6316,35.54655,890.0\nS12013,習志野店,12,千葉県,千葉県習志野市芝園一丁目,チバケンナラシノシシバゾノイッチョウメ,047-123-4002,140.022,35.66122,808.0\n"}]},{"no":10,"text":"S-010: 店舗データ（store）から、店舗コード（store_cd）が\"S14\"で始まるものだけ全項目抽出し、10件表示せよ。","solutions":[{"no":1,"sql":"SELECT\n    *\nFROM store\nWHERE\n    store_cd LIKE 'S14%'\nLIMIT 10\n;","expectedCsv":"store_cd,store_name,prefecture_cd,prefecture,address,address_kana,tel_no,longitude,latitude,floor_area\nS14010,菊名店,14,神奈川県,神奈川県横浜市港北区菊名一丁目,カナガワケンヨコハマシコウホククキクナイッチョウメ,045-123-4032,139.6326,35.50049,1732.0\nS14033,阿久和店,14,神奈川県,神奈川県横浜市瀬谷区阿久和西一丁目,カナガワケンヨコハマシセヤクアクワニシイッチョウメ,045-123-4043,139.4961,35.45918,1495.0\nS14036,相模原中央店,14,神奈川県,神奈川県相模原市中央二丁目,カナガワケンサガミハラシチュウオウニチョウメ,042-123-4045,139.3716,35.57327,1679.0\nS14040,長津田店,14,神奈川県,神奈川県横浜市緑区長津田みなみ台五丁目,カナガワケンヨコハマシミドリクナガツタミナミダイゴチョウメ,045-123-4046,139.4994,35.52398,1548.0\nS14050,阿久和西店,14,神奈川県,神奈川県横浜市瀬谷区阿久和西一丁目,カナガワケンヨコハマシセヤクアクワニシイッチョウメ,045-123-4053,139.4961,35.45918,1830.0\nS14028,二ツ橋店,14,神奈川県,神奈川県横浜市瀬谷区二ツ橋町,カナガワケンヨコハマシセヤクフタツバシチョウ,045-123-4042,139.4963,35.46304,1574.0\nS14012,本牧和田店,14,神奈川県,神奈川県横浜市中区本牧和田,カナガワケンヨコハマシナカクホンモクワダ,045-123-4034,139.6582,35.42156,1341.0\nS14046,北山田店,14,神奈川県,神奈川県横浜市都筑区北山田一丁目,カナガワケンヨコハマシツヅキクキタヤマタイッチョウメ,045-123-4049,139.5916,35.56189,831.0\nS14022,逗子店,14,神奈川県,神奈川県逗子市逗子一丁目,カナガワケンズシシズシイッチョウメ,046-123-4036,139.5789,35.29642,1838.0\nS14011,日吉本町店,14,神奈川県,神奈川県横浜市港北区日吉本町四丁目,カナガワケンヨコハマシコウホククヒヨシホンチョウヨンチョウメ,045-123-4033,139.6316,35.54655,890.0\n"}]},{"no":11,"text":"S-011: 顧客データ（customer）から顧客ID（customer_id）の末尾が1のものだけ全項目抽出し、10件表示せよ。","solutions":[{"no":1,"sql":"SELECT * FROM customer WHERE customer_id LIKE '%1' LIMIT 10;","expectedCsv":"customer_id,customer_name,gender_cd,gender,birth_day,age,postal_cd,address,application_store_cd,application_date,status_cd\nCS037613000071,六角 雅彦,9,不明,1952-04-01,66,136-0076,東京都江東区南砂**********,S13037,20150414,0-00000000-0\nCS028811000001,堀井 かおり,1,女性,1933-03-27,86,245-0016,神奈川県横浜市泉区和泉町**********,S14028,20160115,0-00000000-0\nCS040412000191,川井 郁恵,1,女性,1977-01-05,42,226-0021,神奈川県横浜市緑区北八朔町**********,S14040,20151101,1-20091025-4\nCS028314000011,小菅 あおい,1,女性,1983-11-26,35,246-0038,神奈川県横浜市瀬谷区宮沢**********,S14028,20151123,1-20080426-5\nCS039212000051,藤島 恵梨香,1,女性,1997-02-03,22,166-0001,東京都杉並区阿佐谷北**********,S13039,20171121,1-20100215-4\nCS015412000111,松居 奈月,1,女性,1972-10-04,46,136-0071,東京都江東区亀戸**********,S13015,20150629,0-00000000-0\nCS004702000041,野島 洋,0,男性,1943-08-24,75,176-0022,東京都練馬区向山**********,S13004,20170218,0-00000000-0\nCS041515000001,栗田 千夏,1,女性,1967-01-02,52,206-0001,東京都多摩市和田**********,S13041,20160422,E-20100803-F\nCS029313000221,北条 ひかり,1,女性,1987-06-19,31,279-0011,千葉県浦安市美浜**********,S12029,20180810,0-00000000-0\nCS034312000071,望月 奈央,1,女性,1980-09-20,38,213-0026,神奈川県川崎市高津区久末**********,S14034,20160106,0-00000000-0\n"}]},{"no":12,"text":"S-012: 店舗データ（store）から、住所 (address) に\"横浜市\"が含まれるものだけ全項目表示せよ。","solutions":[{"no":1,"sql":"SELECT * FROM store WHERE address LIKE '%横浜市%';","expectedCsv":"store_cd,store_name,prefecture_cd,prefecture,address,address_kana,tel_no,longitude,latitude,floor_area\nS14010,菊名店,14,神奈川県,神奈川県横浜市港北区菊名一丁目,カナガワケンヨコハマシコウホククキクナイッチョウメ,045-123-4032,139.6326,35.50049,1732.0\nS14033,阿久和店,14,神奈川県,神奈川県横浜市瀬谷区阿久和西一丁目,カナガワケンヨコハマシセヤクアクワニシイッチョウメ,045-123-4043,139.4961,35.45918,1495.0\nS14040,長津田店,14,神奈川県,神奈川県横浜市緑区長津田みなみ台五丁目,カナガワケンヨコハマシミドリクナガツタミナミダイゴチョウメ,045-123-4046,139.4994,35.52398,1548.0\nS14050,阿久和西店,14,神奈川県,神奈川県横浜市瀬谷区阿久和西一丁目,カナガワケンヨコハマシセヤクアクワニシイッチョウメ,045-123-4053,139.4961,35.45918,1830.0\nS14028,二ツ橋店,14,神奈川県,神奈川県横浜市瀬谷区二ツ橋町,カナガワケンヨコハマシセヤクフタツバシチョウ,045-123-4042,139.4963,35.46304,1574.0\nS14012,本牧和田店,14,神奈川県,神奈川県横浜市中区本牧和田,カナガワケンヨコハマシナカクホンモクワダ,045-123-4034,139.6582,35.42156,1341.0\nS14046,北山田店,14,神奈川県,神奈川県横浜市都筑区北山田一丁目,カナガワケンヨコハマシツヅキクキタヤマタイッチョウメ,045-123-4049,139.5916,35.56189,831.0\nS14011,日吉本町店,14,神奈川県,神奈川県横浜市港北区日吉本町四丁目,カナガワケンヨコハマシコウホククヒヨシホンチョウヨンチョウメ,045-123-4033,139.6316,35.54655,890.0\nS14048,中川中央店,14,神奈川県,神奈川県横浜市都筑区中川中央二丁目,カナガワケンヨコハマシツヅキクナカガワチュウオウニチョウメ,045-123-4051,139.5758,35.54912,1657.0\nS14042,新山下店,14,神奈川県,神奈川県横浜市中区新山下二丁目,カナガワケンヨコハマシナカクシンヤマシタニチョウメ,045-123-4047,139.6593,35.43894,1044.0\nS14006,葛が谷店,14,神奈川県,神奈川県横浜市都筑区葛が谷,カナガワケンヨコハマシツヅキククズガヤ,045-123-4031,139.5633,35.53573,1886.0\n"}]},{"no":13,"text":"S-013: 顧客データ（customer）から、ステータスコード（status_cd）の先頭がアルファベットのA〜Fで始まるデータを全項目抽出し、10件表示せよ。","solutions":[{"no":1,"sql":"SELECT * FROM customer WHERE status_cd ~ '^[A-F]' LIMIT 10;","expectedCsv":"customer_id,customer_name,gender_cd,gender,birth_day,age,postal_cd,address,application_store_cd,application_date,status_cd\nCS031415000172,宇多田 貴美子,1,女性,1976-10-04,42,151-0053,東京都渋谷区代々木**********,S13031,20150529,D-20100325-C\nCS015414000103,奥野 陽子,1,女性,1977-08-09,41,136-0073,東京都江東区北砂**********,S13015,20150722,B-20100609-B\nCS011215000048,芦田 沙耶,1,女性,1992-02-01,27,223-0062,神奈川県横浜市港北区日吉本町**********,S14011,20150228,C-20100421-9\nCS029415000023,梅田 里穂,1,女性,1976-01-17,43,279-0043,千葉県浦安市富士見**********,S12029,20150610,D-20100918-E\nCS035415000029,寺沢 真希,9,不明,1977-09-27,41,158-0096,東京都世田谷区玉川台**********,S13035,20141220,F-20101029-F\nCS031415000106,宇野 由美子,1,女性,1970-02-26,49,151-0053,東京都渋谷区代々木**********,S13031,20150201,F-20100511-E\nCS029215000025,石倉 美帆,1,女性,1993-09-28,25,279-0022,千葉県浦安市今川**********,S12029,20150708,B-20100820-C\nCS033605000005,猪股 雄太,0,男性,1955-12-05,63,246-0031,神奈川県横浜市瀬谷区瀬谷**********,S14033,20150425,F-20100917-E\nCS033415000229,板垣 菜々美,1,女性,1977-11-07,41,246-0021,神奈川県横浜市瀬谷区二ツ橋町**********,S14033,20150712,F-20100326-E\nCS008415000145,黒谷 麻緒,1,女性,1977-06-27,41,157-0067,東京都世田谷区喜多見**********,S13008,20150829,F-20100622-F\n"}]},{"no":14,"text":"S-014: 顧客データ（customer）から、ステータスコード（status_cd）の末尾が数字の1〜9で終わるデータを全項目抽出し、10件表示せよ。","solutions":[{"no":1,"sql":"SELECT * FROM customer WHERE status_cd ~ '[1-9]$' LIMIT 10;","expectedCsv":"customer_id,customer_name,gender_cd,gender,birth_day,age,postal_cd,address,application_store_cd,application_date,status_cd\nCS001215000145,田崎 美紀,1,女性,1995-03-29,24,144-0055,東京都大田区仲六郷**********,S13001,20170605,6-20090929-2\nCS033513000180,安斎 遥,1,女性,1962-07-11,56,241-0823,神奈川県横浜市旭区善部町**********,S14033,20150728,6-20080506-5\nCS011215000048,芦田 沙耶,1,女性,1992-02-01,27,223-0062,神奈川県横浜市港北区日吉本町**********,S14011,20150228,C-20100421-9\nCS040412000191,川井 郁恵,1,女性,1977-01-05,42,226-0021,神奈川県横浜市緑区北八朔町**********,S14040,20151101,1-20091025-4\nCS009315000023,皆川 文世,1,女性,1980-04-15,38,154-0012,東京都世田谷区駒沢**********,S13009,20150319,5-20080322-1\nCS015315000033,福士 璃奈子,1,女性,1983-03-17,36,135-0043,東京都江東区塩浜**********,S13015,20141024,4-20080219-3\nCS023513000066,神戸 そら,1,女性,1961-12-17,57,210-0005,神奈川県川崎市川崎区東田町**********,S14023,20150915,5-20100524-9\nCS035513000134,市川 美帆,1,女性,1960-03-27,59,156-0053,東京都世田谷区桜**********,S13035,20150227,8-20100711-9\nCS001515000263,高松 夏空,1,女性,1962-11-09,56,144-0051,東京都大田区西蒲田**********,S13001,20160812,1-20100804-1\nCS040314000027,鶴田 きみまろ,9,不明,1986-03-26,33,226-0027,神奈川県横浜市緑区長津田**********,S14040,20150122,2-20080426-4\n"}]},{"no":15,"text":"S-015: 顧客データ（customer）から、ステータスコード（status_cd）の先頭がアルファベットのA〜Fで始まり、末尾が数字の1〜9で終わるデータを全項目抽出し、10件表示せよ。","solutions":[{"no":1,"sql":"SELECT * FROM customer WHERE status_cd ~ '^[A-F].*[1-9]$' LIMIT 10;","expectedCsv":"customer_id,customer_name,gender_cd,gender,birth_day,age,postal_cd,address,application_store_cd,application_date,status_cd\nCS011215000048,芦田 沙耶,1,女性,1992-02-01,27,223-0062,神奈川県横浜市港北区日吉本町**********,S14011,20150228,C-20100421-9\nCS022513000105,島村 貴美子,1,女性,1962-03-12,57,249-0002,神奈川県逗子市山の根**********,S14022,20150320,A-20091115-7\nCS001515000096,水野 陽子,9,不明,1960-11-29,58,144-0053,東京都大田区蒲田本町**********,S13001,20150614,A-20100724-7\nCS013615000053,西脇 季衣,1,女性,1953-10-18,65,261-0026,千葉県千葉市美浜区幕張西**********,S12013,20150128,B-20100329-6\nCS020412000161,小宮 薫,1,女性,1974-05-21,44,174-0042,東京都板橋区東坂下**********,S13020,20150822,B-20081021-3\nCS001215000097,竹中 あさみ,1,女性,1990-07-25,28,146-0095,東京都大田区多摩川**********,S13001,20170315,A-20100211-2\nCS035212000007,内村 恵梨香,1,女性,1990-12-04,28,152-0023,東京都目黒区八雲**********,S13035,20151013,B-20101018-6\nCS002515000386,野田 コウ,1,女性,1963-05-30,55,185-0013,東京都国分寺市西恋ケ窪**********,S13002,20160410,C-20100127-8\nCS001615000372,稲垣 寿々花,1,女性,1956-10-29,62,144-0035,東京都大田区南蒲田**********,S13001,20170403,A-20100104-1\nCS032512000121,松井 知世,1,女性,1962-09-04,56,210-0011,神奈川県川崎市川崎区富士見**********,S13032,20150727,A-20100103-5\n"}]},{"no":16,"text":"S-016: 店舗データ（store）から、電話番号（tel_no）が3桁-3桁-4桁のデータを全項目表示せよ。","solutions":[{"no":1,"sql":"SELECT * FROM store WHERE tel_no ~ '^[0-9]{3}-[0-9]{3}-[0-9]{4}$';","expectedCsv":"store_cd,store_name,prefecture_cd,prefecture,address,address_kana,tel_no,longitude,latitude,floor_area\nS12014,千草台店,12,千葉県,千葉県千葉市稲毛区千草台一丁目,チバケンチバシイナゲクチグサダイイッチョウメ,043-123-4003,140.118,35.63559,1698.0\nS13002,国分寺店,13,東京都,東京都国分寺市本多二丁目,トウキョウトコクブンジシホンダニチョウメ,042-123-4008,139.4802,35.70566,1735.0\nS14010,菊名店,14,神奈川県,神奈川県横浜市港北区菊名一丁目,カナガワケンヨコハマシコウホククキクナイッチョウメ,045-123-4032,139.6326,35.50049,1732.0\nS14033,阿久和店,14,神奈川県,神奈川県横浜市瀬谷区阿久和西一丁目,カナガワケンヨコハマシセヤクアクワニシイッチョウメ,045-123-4043,139.4961,35.45918,1495.0\nS14036,相模原中央店,14,神奈川県,神奈川県相模原市中央二丁目,カナガワケンサガミハラシチュウオウニチョウメ,042-123-4045,139.3716,35.57327,1679.0\nS14040,長津田店,14,神奈川県,神奈川県横浜市緑区長津田みなみ台五丁目,カナガワケンヨコハマシミドリクナガツタミナミダイゴチョウメ,045-123-4046,139.4994,35.52398,1548.0\nS14050,阿久和西店,14,神奈川県,神奈川県横浜市瀬谷区阿久和西一丁目,カナガワケンヨコハマシセヤクアクワニシイッチョウメ,045-123-4053,139.4961,35.45918,1830.0\nS13052,森野店,13,東京都,東京都町田市森野三丁目,トウキョウトマチダシモリノサンチョウメ,042-123-4030,139.4383,35.55293,1087.0\nS14028,二ツ橋店,14,神奈川県,神奈川県横浜市瀬谷区二ツ橋町,カナガワケンヨコハマシセヤクフタツバシチョウ,045-123-4042,139.4963,35.46304,1574.0\nS14012,本牧和田店,14,神奈川県,神奈川県横浜市中区本牧和田,カナガワケンヨコハマシナカクホンモクワダ,045-123-4034,139.6582,35.42156,1341.0\nS14046,北山田店,14,神奈川県,神奈川県横浜市都筑区北山田一丁目,カナガワケンヨコハマシツヅキクキタヤマタイッチョウメ,045-123-4049,139.5916,35.56189,831.0\nS14022,逗子店,14,神奈川県,神奈川県逗子市逗子一丁目,カナガワケンズシシズシイッチョウメ,046-123-4036,139.5789,35.29642,1838.0\nS14011,日吉本町店,14,神奈川県,神奈川県横浜市港北区日吉本町四丁目,カナガワケンヨコハマシコウホククヒヨシホンチョウヨンチョウメ,045-123-4033,139.6316,35.54655,890.0\nS13016,小金井店,13,東京都,東京都小金井市本町一丁目,トウキョウトコガネイシホンチョウイッチョウメ,042-123-4015,139.5094,35.70018,1399.0\nS14034,川崎野川店,14,神奈川県,神奈川県川崎市宮前区野川,カナガワケンカワサキシミヤマエクノガワ,044-123-4044,139.5998,35.57693,1318.0\nS14048,中川中央店,14,神奈川県,神奈川県横浜市都筑区中川中央二丁目,カナガワケンヨコハマシツヅキクナカガワチュウオウニチョウメ,045-123-4051,139.5758,35.54912,1657.0\nS12007,佐倉店,12,千葉県,千葉県佐倉市上志津,チバケンサクラシカミシヅ,043-123-4001,140.1452,35.71872,1895.0\nS14026,辻堂西海岸店,14,神奈川県,神奈川県藤沢市辻堂西海岸二丁目,カナガワケンフジサワシツジドウニシカイガンニチョウメ,046-123-4040,139.4466,35.32464,1732.0\nS13041,八王子店,13,東京都,東京都八王子市大塚,トウキョウトハチオウジシオオツカ,042-123-4026,139.4235,35.63787,810.0\nS14049,川崎大師店,14,神奈川県,神奈川県川崎市川崎区中瀬三丁目,カナガワケンカワサキシカワサキクナカゼサンチョウメ,044-123-4052,139.7327,35.53759,962.0\nS14023,川崎店,14,神奈川県,神奈川県川崎市川崎区本町二丁目,カナガワケンカワサキシカワサキクホンチョウニチョウメ,044-123-4037,139.7028,35.53599,1804.0\nS13018,清瀬店,13,東京都,東京都清瀬市松山一丁目,トウキョウトキヨセシマツヤマイッチョウメ,042-123-4017,139.5178,35.76885,1220.0\nS14027,南藤沢店,14,神奈川県,神奈川県藤沢市南藤沢,カナガワケンフジサワシミナミフジサワ,046-123-4041,139.4896,35.33762,1521.0\nS14021,伊勢原店,14,神奈川県,神奈川県伊勢原市伊勢原四丁目,カナガワケンイセハラシイセハラヨンチョウメ,046-123-4035,139.3129,35.40169,962.0\nS14047,相模原店,14,神奈川県,神奈川県相模原市千代田六丁目,カナガワケンサガミハラシチヨダロクチョウメ,042-123-4050,139.3748,35.55959,1047.0\nS12013,習志野店,12,千葉県,千葉県習志野市芝園一丁目,チバケンナラシノシシバゾノイッチョウメ,047-123-4002,140.022,35.66122,808.0\nS14042,新山下店,14,神奈川県,神奈川県横浜市中区新山下二丁目,カナガワケンヨコハマシナカクシンヤマシタニチョウメ,045-123-4047,139.6593,35.43894,1044.0\nS12030,八幡店,12,千葉県,千葉県市川市八幡三丁目,チバケンイチカワシヤワタサンチョウメ,047-123-4005,139.924,35.72318,1162.0\nS14025,大和店,14,神奈川県,神奈川県大和市下和田,カナガワケンヤマトシシモワダ,046-123-4039,139.468,35.43414,1011.0\nS14045,厚木店,14,神奈川県,神奈川県厚木市中町二丁目,カナガワケンアツギシナカチョウニチョウメ,046-123-4048,139.3651,35.44182,980.0\nS12029,東野店,12,千葉県,千葉県浦安市東野一丁目,チバケンウラヤスシヒガシノイッチョウメ,047-123-4004,139.8968,35.65086,1101.0\nS12053,高洲店,12,千葉県,千葉県浦安市高洲五丁目,チバケンウラヤスシタカスゴチョウメ,047-123-4006,139.9176,35.63755,1555.0\nS14024,三田店,14,神奈川県,神奈川県川崎市多摩区三田四丁目,カナガワケンカワサキシタマクミタヨンチョウメ,044-123-4038,139.5424,35.6077,972.0\nS14006,葛が谷店,14,神奈川県,神奈川県横浜市都筑区葛が谷,カナガワケンヨコハマシツヅキククズガヤ,045-123-4031,139.5633,35.53573,1886.0\n"}]},{"no":17,"text":"S-017: 顧客データ（customer）を生年月日（birth_day）で高齢順にソートし、先頭から全項目を10件表示せよ。","solutions":[{"no":1,"sql":"SELECT * FROM customer ORDER BY birth_day LIMIT 10;","expectedCsv":"customer_id,customer_name,gender_cd,gender,birth_day,age,postal_cd,address,application_store_cd,application_date,status_cd\nCS003813000014,村山 菜々美,1,女性,1928-11-26,90,182-0007,東京都調布市菊野台**********,S13003,20160214,0-00000000-0\nCS026813000004,吉村 朝陽,1,女性,1928-12-14,90,251-0043,神奈川県藤沢市辻堂元町**********,S14026,20150723,0-00000000-0\nCS018811000003,熊沢 美里,1,女性,1929-01-07,90,204-0004,東京都清瀬市野塩**********,S13018,20150403,0-00000000-0\nCS027803000004,内村 拓郎,0,男性,1929-01-12,90,251-0031,神奈川県藤沢市鵠沼藤が谷**********,S14027,20151227,0-00000000-0\nCS013801000003,天野 拓郎,0,男性,1929-01-15,90,274-0824,千葉県船橋市前原東**********,S12013,20160120,0-00000000-0\nCS001814000022,鶴田 里穂,1,女性,1929-01-28,90,144-0045,東京都大田区南六郷**********,S13001,20161012,A-20090415-7\nCS016815000002,山元 美紀,1,女性,1929-02-22,90,184-0005,東京都小金井市桜町**********,S13016,20150629,C-20090923-C\nCS009815000003,中田 里穂,1,女性,1929-04-08,89,154-0014,東京都世田谷区新町**********,S13009,20150421,D-20091021-E\nCS012813000013,宇野 南朋,1,女性,1929-04-09,89,231-0806,神奈川県横浜市中区本牧町**********,S14012,20150712,0-00000000-0\nCS005813000015,金谷 恵梨香,1,女性,1929-04-09,89,165-0032,東京都中野区鷺宮**********,S13005,20150506,0-00000000-0\n"}]},{"no":18,"text":"S-018: 顧客データ（customer）を生年月日（birth_day）で若い順にソートし、先頭から全項目を10件表示せよ。","solutions":[{"no":1,"sql":"SELECT * FROM customer ORDER BY birth_day DESC LIMIT 10;","expectedCsv":"customer_id,customer_name,gender_cd,gender,birth_day,age,postal_cd,address,application_store_cd,application_date,status_cd\nCS035114000004,大村 美里,1,女性,2007-11-25,11,156-0053,東京都世田谷区桜**********,S13035,20150619,6-20091205-6\nCS022103000002,福山 はじめ,9,不明,2007-10-02,11,249-0006,神奈川県逗子市逗子**********,S14022,20160909,0-00000000-0\nCS002113000009,柴田 真悠子,1,女性,2007-09-17,11,184-0014,東京都小金井市貫井南町**********,S13002,20160304,0-00000000-0\nCS004115000014,松井 京子,1,女性,2007-08-09,11,165-0031,東京都中野区上鷺宮**********,S13004,20161120,1-20081231-1\nCS002114000010,山内 遥,1,女性,2007-06-03,11,184-0015,東京都小金井市貫井北町**********,S13002,20160920,6-20100510-1\nCS025115000002,小柳 夏希,1,女性,2007-04-18,11,245-0018,神奈川県横浜市泉区上飯田町**********,S14025,20160116,D-20100913-D\nCS002113000025,広末 まなみ,1,女性,2007-03-30,12,184-0015,東京都小金井市貫井北町**********,S13002,20171030,0-00000000-0\nCS033112000003,長野 美紀,1,女性,2007-03-22,12,245-0051,神奈川県横浜市戸塚区名瀬町**********,S14033,20150606,0-00000000-0\nCS007115000006,福岡 瞬,1,女性,2007-03-10,12,285-0845,千葉県佐倉市西志津**********,S12007,20151118,F-20101016-F\nCS014113000008,矢口 莉緒,1,女性,2007-03-05,12,260-0041,千葉県千葉市中央区東千葉**********,S12014,20150622,3-20091108-6\n"}]},{"no":19,"text":"S-019: レシート明細データ（receipt）に対し、1件あたりの売上金額（amount）が高い順にランクを付与し、先頭から10件表示せよ。項目は顧客ID（customer_id）、売上金額（amount）、付与したランクを表示させること。なお、売上金額（amount）が等しい場合は同一順位を付与するものとし、顧客ID (customer_id)の昇順に並べる。","solutions":[{"no":1,"sql":"SELECT\n    customer_id,\n    amount,\n    RANK() OVER(ORDER BY amount DESC) AS ranking \nFROM receipt\nORDER BY amount DESC, customer_id ASC\nLIMIT 10\n;","expectedCsv":"customer_id,amount,ranking\nCS011415000006,10925,1\nZZ000000000000,6800,2\nCS028605000002,5780,3\nCS015515000034,5480,4\nZZ000000000000,5480,4\nZZ000000000000,5480,4\nCS021515000089,5440,7\nZZ000000000000,5440,7\nCS001412000160,5280,9\nCS002415000728,5280,9\n"}]},{"no":20,"text":"S-020: レシート明細データ（receipt）に対し、1件あたりの売上金額（amount）が高い順、店舗コード (store_cd)の昇順にランクを付与し、先頭から10件表示せよ。項目は顧客ID（customer_id）、売上金額（amount）、付与したランクを表示させること。なお、売上金額（amount）が等しい場合でも別順位を付与すること。","solutions":[{"no":1,"sql":"SELECT\n    customer_id,\n    amount,\n    ROW_NUMBER() OVER(ORDER BY amount DESC, store_cd) AS ranking \nFROM receipt\nLIMIT 10\n;","expectedCsv":"customer_id,amount,ranking\nCS011415000006,10925,1\nZZ000000000000,6800,2\nCS028605000002,5780,3\nZZ000000000000,5480,4\nCS015515000034,5480,5\nZZ000000000000,5480,6\nZZ000000000000,5440,7\nCS021515000089,5440,8\nZZ000000000000,5280,9\nCS030515000189,5280,10\n"}]},{"no":21,"text":"S-021: レシート明細データ（receipt）に対し、件数をカウントせよ。","solutions":[{"no":1,"sql":"-- コード例1\nSELECT COUNT(1) FROM receipt;","expectedCsv":"count\n104681\n"},{"no":2,"sql":"-- コード例2（*でもOK）\nSELECT COUNT(*) FROM receipt;","expectedCsv":"count\n104681\n"}]},{"no":22,"text":"S-022: レシート明細データ（receipt）の顧客ID（customer_id）に対し、ユニーク件数をカウントせよ。","solutions":[{"no":1,"sql":"SELECT\n    COUNT(DISTINCT customer_id)\nFROM receipt\n;","expectedCsv":"count\n8307\n"}]},{"no":23,"text":"S-023: レシート明細データ（receipt）に対し、店舗コード（store_cd）ごとに売上金額（amount）と売上数量（quantity）を合計せよ。","solutions":[{"no":1,"sql":"SELECT store_cd\n    , SUM(amount) AS amount\n    , SUM(quantity) AS quantity\nFROM receipt\ngroup by store_cd\n;","expectedCsv":"store_cd,amount,quantity\nS12007,638761,2099\nS13017,748221,2376\nS13043,587895,1881\nS13052,100314,250\nS13016,793773,2432\nS14027,714550,2303\nS13009,808870,2486\nS14022,651328,2047\nS13019,827833,2541\nS13039,611888,1981\nS14046,412646,1354\nS13003,764294,2197\nS14028,786145,2458\nS14045,458484,1398\nS13002,727821,2340\nS14042,534689,1935\nS13004,779373,2390\nS13038,708884,2337\nS12014,725167,2358\nS14021,699511,2231\nS14006,712839,2284\nS13001,811936,2347\nS14023,727630,2258\nS14025,755581,2394\nS13035,715869,2219\nS14048,234276,769\nS14012,720600,2412\nS14024,736323,2417\nS13041,728266,2233\nS14026,824537,2503\nS14010,790361,2290\nS13015,780873,2248\nS13008,809288,2491\nS14049,230808,788\nS14050,167090,580\nS13031,705968,2336\nS12013,787513,2425\nS13044,520764,1729\nS14033,725318,2282\nS12029,794741,2555\nS13037,693087,2344\nS12030,684402,2403\nS13032,790501,2491\nS14034,653681,2024\nS14040,701858,2233\nS13005,629876,2004\nS14047,338329,1041\nS14011,805724,2434\nS13018,790535,2562\nS13020,796383,2383\nS13051,107452,354\nS14036,203694,635\n"}]},{"no":24,"text":"S-024: レシート明細データ（receipt）に対し、顧客ID（customer_id）ごとに最も新しい売上年月日（sales_ymd）を求め、10件表示せよ。","solutions":[{"no":1,"sql":"SELECT\n    customer_id,\n    MAX(sales_ymd)\nFROM receipt\nGROUP BY customer_id\nLIMIT 10\n;","expectedCsv":"customer_id,max\nCS001311000059,20180211\nCS004614000122,20181228\nCS003512000043,20180106\nCS011615000061,20190503\nCS029212000033,20180621\nCS007515000119,20190511\nCS034515000123,20190708\nCS004315000058,20170517\nCS026414000014,20190720\nCS001615000099,20170729\n"}]},{"no":25,"text":"S-025: レシート明細データ（receipt）に対し、顧客ID（customer_id）ごとに最も古い売上年月日（sales_ymd）を求め、10件表示せよ。","solutions":[{"no":1,"sql":"SELECT\n    customer_id,\n    MIN(sales_ymd)\nFROM receipt\nGROUP BY customer_id\nLIMIT 10\n;","expectedCsv":"customer_id,min\nCS001311000059,20180211\nCS004614000122,20181228\nCS003512000043,20180106\nCS011615000061,20190503\nCS029212000033,20170318\nCS007515000119,20170201\nCS034515000123,20170527\nCS004315000058,20170517\nCS026414000014,20170718\nCS001615000099,20170729\n"}]},{"no":26,"text":"S-026: レシート明細データ（receipt）に対し、顧客ID（customer_id）ごとに最も新しい売上年月日（sales_ymd）と古い売上年月日を求め、両者が異なるデータを10件表示せよ。","solutions":[{"no":1,"sql":"SELECT\n    customer_id,\n    MAX(sales_ymd),\n    MIN(sales_ymd)\nFROM receipt\nGROUP BY customer_id\nHAVING MAX(sales_ymd) != MIN(sales_ymd)\nLIMIT 10\n;","expectedCsv":"customer_id,max,min\nCS029212000033,20180621,20170318\nCS007515000119,20190511,20170201\nCS034515000123,20190708,20170527\nCS026414000014,20190720,20170718\nCS010515000082,20181204,20180518\nCS019315000045,20170920,20170423\nCS008513000099,20190308,20170722\nCS007615000070,20191025,20170929\nCS025415000155,20191026,20170314\nCS016414000063,20190617,20170109\n"}]},{"no":27,"text":"S-027: レシート明細データ（receipt）に対し、店舗コード（store_cd）ごとに売上金額（amount）の平均を計算し、降順でTOP5を表示せよ。","solutions":[{"no":1,"sql":"SELECT\n    store_cd,\n    AVG(amount) AS avg_amount\nFROM receipt\nGROUP BY store_cd\nORDER BY avg_amount DESC\nLIMIT 5\n;","expectedCsv":"store_cd,avg_amount\nS13052,402.8674698795180723\nS13015,351.1119604316546763\nS13003,350.9155188246097337\nS14010,348.7912621359223301\nS13001,348.4703862660944206\n"}]},{"no":28,"text":"S-028: レシート明細データ（receipt）に対し、店舗コード（store_cd）ごとに売上金額（amount）の中央値を計算し、降順でTOP5を表示せよ。","solutions":[{"no":1,"sql":"SELECT \n    store_cd, \n    PERCENTILE_CONT(0.5) WITHIN GROUP(ORDER BY amount) AS amount_50per\nFROM receipt\nGROUP BY store_cd\nORDER BY amount_50per DESC\nLIMIT 5\n;","expectedCsv":"store_cd,amount_50per\nS13052,190\nS14010,188\nS14050,185\nS13003,180\nS13018,180\n"}]},{"no":29,"text":"S-029: レシート明細データ（receipt）に対し、店舗コード（store_cd）ごとに商品コード（product_cd）の最頻値を求め、10件表示させよ。","solutions":[{"no":1,"sql":"-- コード例1: window関数や分析関数で最頻値を集計する\nWITH product_cnt AS (\n    SELECT\n        store_cd,\n        product_cd,\n        COUNT(1) AS mode_cnt\n    FROM receipt\n    GROUP BY\n        store_cd,\n        product_cd\n),\nproduct_mode AS (\n    SELECT\n        store_cd,\n        product_cd,\n        mode_cnt,\n        RANK() OVER(PARTITION BY store_cd ORDER BY mode_cnt DESC) AS rnk\n    FROM product_cnt\n)\nSELECT\n    store_cd,\n    product_cd,\n    mode_cnt\nFROM product_mode\nWHERE\n    rnk = 1\nORDER BY\n    store_cd,\n    product_cd\nLIMIT 10\n;","expectedCsv":"store_cd,product_cd,mode_cnt\nS12007,P060303001,72\nS12013,P060303001,107\nS12014,P060303001,65\nS12029,P060303001,92\nS12030,P060303001,115\nS13001,P060303001,67\nS13002,P060303001,78\nS13003,P071401001,65\nS13004,P060303001,88\nS13005,P040503001,36\n"},{"no":2,"sql":"-- コード例2: MODE()を使う簡易ケース（早いが最頻値が複数の場合は一つだけ選ばれる）\nSELECT\n    store_cd,\n    MODE() WITHIN GROUP(ORDER BY product_cd)\nFROM receipt\nGROUP BY store_cd\nORDER BY store_cd\nLIMIT 10\n;","expectedCsv":"store_cd,mode\nS12007,P060303001\nS12013,P060303001\nS12014,P060303001\nS12029,P060303001\nS12030,P060303001\nS13001,P060303001\nS13002,P060303001\nS13003,P071401001\nS13004,P060303001\nS13005,P040503001\n"}]},{"no":30,"text":"S-030: レシート明細データ（receipt）に対し、店舗コード（store_cd）ごとに売上金額（amount）の分散を計算し、降順で5件表示せよ。","solutions":[{"no":1,"sql":"SELECT\n    store_cd,\n    VAR_POP(amount) AS vars_amount\nFROM receipt\nGROUP BY store_cd\nORDER BY vars_amount DESC \nLIMIT 5\n;","expectedCsv":"store_cd,vars_amount\nS13052,440088.701311269173\nS14011,306314.558163888889\nS14034,296920.081011283873\nS13001,295431.993329035348\nS13015,295294.361115940880\n"}]},{"no":31,"text":"S-031: レシート明細データ（receipt）に対し、店舗コード（store_cd）ごとに売上金額（amount）の標準偏差を計算し、降順で5件表示せよ。","solutions":[{"no":1,"sql":"SELECT\n    store_cd,\n    STDDEV_POP(amount) as stds_amount\nFROM receipt\nGROUP BY store_cd\nORDER BY stds_amount DESC\nLIMIT 5\n;","expectedCsv":"store_cd,stds_amount\nS13052,663.391815830787\nS14011,553.456916267101\nS14034,544.903735545357\nS13001,543.536561170484\nS13015,543.409938366921\n"}]},{"no":32,"text":"S-032: レシート明細データ（receipt）の売上金額（amount）について、25％刻みでパーセンタイル値を求めよ。","solutions":[{"no":1,"sql":"SELECT\n    PERCENTILE_CONT(0.25) WITHIN GROUP(ORDER BY amount) AS amount_25per,\n    PERCENTILE_CONT(0.50) WITHIN GROUP(ORDER BY amount) AS amount_50per,\n    PERCENTILE_CONT(0.75) WITHIN GROUP(ORDER BY amount) AS amount_75per,\n    PERCENTILE_CONT(1.0) WITHIN GROUP(ORDER BY amount) AS amount_100per\nFROM receipt\n;","expectedCsv":"amount_25per,amount_50per,amount_75per,amount_100per\n102,170,288,10925\n"}]},{"no":33,"text":"S-033: レシート明細データ（receipt）に対し、店舗コード（store_cd）ごとに売上金額（amount）の平均を計算し、330以上のものを抽出せよ。","solutions":[{"no":1,"sql":"SELECT\n    store_cd,\n    AVG(amount) AS avg_amount\nFROM receipt\nGROUP BY store_cd\nHAVING\n    AVG(amount) >= 330\n;","expectedCsv":"store_cd,avg_amount\nS13052,402.8674698795180723\nS13019,330.2086158755484643\nS13003,350.9155188246097337\nS14045,330.0820734341252700\nS13004,330.9439490445859873\nS13001,348.4703862660944206\nS14026,332.3405884723901653\nS14010,348.7912621359223301\nS13015,351.1119604316546763\nS12013,330.1941299790356394\nS14047,330.0770731707317073\nS14011,335.7183333333333333\nS13020,337.8799321170980059\n"}]},{"no":34,"text":"S-034: レシート明細データ（receipt）に対し、顧客ID（customer_id）ごとに売上金額（amount）を合計して全顧客の平均を求めよ。ただし、顧客IDが\"Z\"から始まるものは非会員を表すため、除外して計算すること。","solutions":[{"no":1,"sql":"WITH customer_amount AS (\n    SELECT\n        customer_id,\n        SUM(amount) AS sum_amount\n    FROM receipt\n    WHERE\n        customer_id NOT LIKE 'Z%'\n    GROUP BY customer_id\n)\nSELECT\n    AVG(sum_amount)\nFROM customer_amount\n;","expectedCsv":"avg\n2547.7422345292559595\n"}]},{"no":35,"text":"S-035: レシート明細データ（receipt）に対し、顧客ID（customer_id）ごとに売上金額（amount）を合計して全顧客の平均を求め、平均以上に買い物をしている顧客を抽出し、10件表示せよ。ただし、顧客IDが\"Z\"から始まるものは非会員を表すため、除外して計算すること。","solutions":[{"no":1,"sql":"WITH customer_amount AS (\n    SELECT\n        customer_id,\n        SUM(amount) AS sum_amount\n    FROM receipt\n    WHERE\n        customer_id NOT LIKE 'Z%'\n    GROUP BY customer_id\n)\nSELECT\n    customer_id,\n    sum_amount\nFROM customer_amount\nWHERE\n    sum_amount >= (\n        SELECT\n            AVG(sum_amount)\n        FROM customer_amount\n    )\nLIMIT 10\n;","expectedCsv":"customer_id,sum_amount\nCS029212000033,3604\nCS007515000119,7157\nCS034515000123,3699\nCS026414000014,6671\nCS007615000070,2975\nCS016414000063,6207\nCS012514000018,2562\nCS029515000142,3420\nCS015215000021,3090\nCS039814000011,8031\n"}]},{"no":36,"text":"S-036: レシート明細データ（receipt）と店舗データ（store）を店舗コード(store_cd)で内部結合し、レシート明細データの全項目と店舗データの店舗名（store_name）を10件表示せよ。","solutions":[{"no":1,"sql":"SELECT\n    r.*,\n    s.store_name\nFROM receipt r\nJOIN store s\nON\n    r.store_cd = s.store_cd\nLIMIT 10\n;","expectedCsv":"sales_ymd,sales_epoch,store_cd,receipt_no,receipt_sub_no,customer_id,product_cd,quantity,amount,store_name\n20181103,1541203200,S14006,112,1,CS006214000001,P070305012,1,158,葛が谷店\n20181118,1542499200,S13008,1132,2,CS008415000097,P070701017,1,81,成城店\n20170712,1499817600,S14028,1102,1,CS028414000014,P060101005,1,170,二ツ橋店\n20190205,1549324800,S14042,1132,1,ZZ000000000000,P050301001,1,25,新山下店\n20180821,1534809600,S14025,1102,2,CS025415000050,P060102007,1,90,大和店\n20190605,1559692800,S13003,1112,1,CS003515000195,P050102002,1,138,狛江店\n20181205,1543968000,S14024,1102,2,CS024514000042,P080101005,1,30,三田店\n20190922,1569110400,S14040,1102,1,CS040415000178,P070501004,1,128,長津田店\n20170504,1493856000,S13020,1112,2,ZZ000000000000,P071302010,1,770,十条仲原店\n20191010,1570665600,S14027,1102,1,CS027514000015,P071101003,1,680,南藤沢店\n"}]},{"no":37,"text":"S-037: 商品データ（product）とカテゴリデータ（category）をカテゴリ小区分コード(category_small_cd)で内部結合し、商品データの全項目とカテゴリデータのカテゴリ小区分名（category_small_name）を10件表示せよ。","solutions":[{"no":1,"sql":"SELECT\n    p.*,\n    c.category_small_name\nFROM product p\nJOIN category c\nON\n    p.category_small_cd = c.category_small_cd\nLIMIT 10\n;","expectedCsv":"product_cd,category_major_cd,category_medium_cd,category_small_cd,unit_price,unit_cost,category_small_name\nP040101001,04,0401,040101,198,149,弁当類\nP040101002,04,0401,040101,218,164,弁当類\nP040101003,04,0401,040101,230,173,弁当類\nP040101004,04,0401,040101,248,186,弁当類\nP040101005,04,0401,040101,268,201,弁当類\nP040101006,04,0401,040101,298,224,弁当類\nP040101007,04,0401,040101,338,254,弁当類\nP040101008,04,0401,040101,420,315,弁当類\nP040101009,04,0401,040101,498,374,弁当類\nP040101010,04,0401,040101,580,435,弁当類\n"}]},{"no":38,"text":"S-038: 顧客データ（customer）とレシート明細データ（receipt）から、顧客ごとの売上金額合計を求め、売上合計金額の降順、顧客IDの昇順で10件表示せよ。ただし、売上実績がない顧客については売上金額を0として表示させること。また、顧客は性別コード（gender_cd）が女性（1）であるものを対象とし、非会員（顧客IDが\"Z\"から始まるもの）は除外すること。","solutions":[{"no":1,"sql":"WITH customer_amount AS (\n    SELECT\n        customer_id,\n        SUM(amount) AS sum_amount\n    FROM receipt\n    GROUP BY\n        customer_id\n),\ncustomer_data AS (\n    SELECT\n        customer_id\n    FROM customer\n    WHERE\n        gender_cd = '1'\n        AND customer_id NOT LIKE 'Z%'\n)\nSELECT\n    c.customer_id,\n    COALESCE(a.sum_amount, 0) as sum_amount\nFROM customer_data c\nLEFT OUTER JOIN customer_amount a\nON\n    c.customer_id = a.customer_id\nORDER BY sum_amount DESC, customer_id\nLIMIT 10\n;","expectedCsv":"customer_id,coalesce\nCS017415000097,23086\nCS015415000185,20153\nCS031414000051,19202\nCS028415000007,19127\nCS010214000010,18585\nCS006515000023,18372\nCS016415000141,18372\nCS011414000106,18338\nCS038415000104,17847\nCS035414000024,17615\n"}]},{"no":39,"text":"S-039: レシート明細データ（receipt）から、売上日数の多い顧客の上位20件を抽出したデータと、売上金額合計の多い顧客の上位20件を抽出したデータをそれぞれ作成し、さらにその2つを完全外部結合せよ。ただし、非会員（顧客IDが\"Z\"から始まるもの）は除外すること。","solutions":[{"no":1,"sql":"WITH customer_data AS (\n    select\n        customer_id,\n        sales_ymd,\n        amount\n    FROM receipt\n    WHERE\n        customer_id NOT LIKE 'Z%'\n),\ncustomer_days AS (\n    select\n        customer_id,\n        COUNT(DISTINCT sales_ymd) come_days\n    FROM customer_data\n    GROUP BY\n        customer_id\n    ORDER BY\n        come_days DESC\n    LIMIT 20\n),\ncustomer_amount AS (\n    SELECT\n        customer_id,\n        SUM(amount) buy_amount\n    FROM customer_data\n    GROUP BY\n        customer_id\n    ORDER BY\n        buy_amount DESC\n    LIMIT 20\n)\nSELECT\n    COALESCE(d.customer_id, a.customer_id) customer_id,\n    d.come_days,\n    a.buy_amount\nFROM customer_days d\nFULL OUTER JOIN customer_amount a\nON\n    d.customer_id = a.customer_id\n;","expectedCsv":"customer_id,come_days,buy_amount\nCS040214000008,23,null\nCS015415000185,22,20153\nCS010214000010,22,18585\nCS028415000007,21,19127\nCS010214000002,21,null\nCS017415000097,20,23086\nCS016415000141,20,18372\nCS021514000045,19,null\nCS022515000226,19,null\nCS031414000051,19,19202\nCS039414000052,19,null\nCS014214000023,19,null\nCS021515000172,19,null\nCS031414000073,18,null\nCS007515000107,18,null\nCS014415000077,18,null\nCS021515000056,18,null\nCS032415000209,18,null\nCS021515000211,18,null\nCS022515000028,18,null\nCS011415000006,null,16094\nCS016415000101,null,16348\nCS030415000034,null,15468\nCS021515000089,null,17580\nCS034415000047,null,16083\nCS006515000023,null,18372\nCS038415000104,null,17847\nCS015515000034,null,15300\nCS032414000072,null,16563\nCS011414000106,null,18338\nCS001605000009,null,18925\nCS009414000059,null,15492\nCS035414000024,null,17615\nCS007514000094,null,15735\n"}]},{"no":40,"text":"S-040: 全ての店舗と全ての商品を組み合わせたデータを作成したい。店舗データ（store）と商品データ（product）を直積し、件数を計算せよ。","solutions":[{"no":1,"sql":"SELECT\n    COUNT(1)\nFROM store\nCROSS JOIN product\n;","expectedCsv":"count\n531590\n"}]},{"no":41,"text":"S-041: レシート明細データ（receipt）の売上金額（amount）を日付（sales_ymd）ごとに集計し、前回売上があった日からの売上金額増減を計算せよ。そして結果を10件表示せよ。","solutions":[{"no":1,"sql":"WITH sales_amount_by_date AS (\n    SELECT\n        sales_ymd,\n        SUM(amount) AS amount\n    FROM receipt\n    GROUP BY\n        sales_ymd\n),\nsales_amount_by_date_with_lag as (\n    SELECT\n        sales_ymd,\n        LAG(sales_ymd, 1) OVER(ORDER BY sales_ymd) lag_ymd,\n        amount,\n        LAG(amount, 1) OVER(ORDER BY sales_ymd) AS lag_amount\n    FROM sales_amount_by_date\n)\nSELECT\n    sales_ymd,\n    amount,\n    lag_ymd,\n    lag_amount,\n    amount - lag_amount AS diff_amount\nFROM sales_amount_by_date_with_lag\nORDER BY\n    sales_ymd\nLIMIT 10\n;","expectedCsv":"sales_ymd,amount,lag_ymd,lag_amount,diff_amount\n20170101,33723,null,null,null\n20170102,24165,20170101,33723,-9558\n20170103,27503,20170102,24165,3338\n20170104,36165,20170103,27503,8662\n20170105,37830,20170104,36165,1665\n20170106,32387,20170105,37830,-5443\n20170107,23415,20170106,32387,-8972\n20170108,24737,20170107,23415,1322\n20170109,26718,20170108,24737,1981\n20170110,20143,20170109,26718,-6575\n"}]},{"no":42,"text":"S-042: レシート明細データ（receipt）の売上金額（amount）を日付（sales_ymd）ごとに集計し、各日付のデータに対し、前回、前々回、3回前に売上があった日のデータを結合せよ。そして結果を10件表示せよ。","solutions":[{"no":1,"sql":"-- コード例1:縦持ちケース\nWITH sales_amount_by_date AS (\n    SELECT\n        sales_ymd,\n        SUM(amount) AS amount\n    FROM receipt\n    GROUP BY\n        sales_ymd\n),\nsales_amount_lag_date AS (\n    SELECT\n        sales_ymd,\n        LAG(sales_ymd, 3) OVER (ORDER BY sales_ymd) AS lag_date_3,\n        amount\n    FROM sales_amount_by_date\n)\nSELECT\n    a.sales_ymd,\n    a.amount,\n    b.sales_ymd AS lag_ymd,\n    b.amount AS lag_amount\nFROM sales_amount_lag_date a\nJOIN sales_amount_lag_date b\nON\n    (\n        a.lag_date_3 IS NULL\n        OR a.lag_date_3 <= b.sales_ymd\n    )\n    AND b.sales_ymd < a.sales_ymd\nORDER BY\n    sales_ymd,\n    lag_ymd\nLIMIT 10\n;","expectedCsv":"sales_ymd,amount,lag_ymd,lag_amount\n20170102,24165,20170101,33723\n20170103,27503,20170101,33723\n20170103,27503,20170102,24165\n20170104,36165,20170101,33723\n20170104,36165,20170102,24165\n20170104,36165,20170103,27503\n20170105,37830,20170102,24165\n20170105,37830,20170103,27503\n20170105,37830,20170104,36165\n20170106,32387,20170103,27503\n"},{"no":2,"sql":"-- コード例2:横持ちケース\nWITH sales_amount_by_date AS (\n    SELECT\n        sales_ymd,\n        SUM(amount) AS amount\n    FROM receipt\n    GROUP BY\n        sales_ymd\n),\nsales_amount_with_lag AS (\n    SELECT\n        sales_ymd,\n        amount, \n        LAG(sales_ymd, 1) OVER (ORDER BY sales_ymd) AS lag_ymd_1,\n        LAG(amount, 1) OVER (ORDER BY sales_ymd) AS lag_amount_1,\n        LAG(sales_ymd, 2) OVER (ORDER BY sales_ymd) AS lag_ymd_2,\n        LAG(amount, 2) OVER (ORDER BY sales_ymd) AS lag_amount_2,\n        LAG(sales_ymd, 3) OVER (ORDER BY sales_ymd) AS lag_ymd_3,\n        LAG(amount, 3) OVER (ORDER BY sales_ymd) AS lag_amount_3\n    FROM sales_amount_by_date\n)\nSELECT\n    sales_ymd,\n    amount, \n    lag_ymd_1,\n    lag_amount_1,\n    lag_ymd_2,\n    lag_amount_2,\n    lag_ymd_3,\n    lag_amount_3\nFROM sales_amount_with_lag\nWHERE\n    lag_ymd_3 IS NOT NULL\nORDER BY\n    sales_ymd\nLIMIT 10\n;","expectedCsv":"sales_ymd,amount,lag_ymd_1,lag_amount_1,lag_ymd_2,lag_amount_2,lag_ymd_3,lag_amount_3\n20170104,36165,20170103,27503,20170102,24165,20170101,33723\n20170105,37830,20170104,36165,20170103,27503,20170102,24165\n20170106,32387,20170105,37830,20170104,36165,20170103,27503\n20170107,23415,20170106,32387,20170105,37830,20170104,36165\n20170108,24737,20170107,23415,20170106,32387,20170105,37830\n20170109,26718,20170108,24737,20170107,23415,20170106,32387\n20170110,20143,20170109,26718,20170108,24737,20170107,23415\n20170111,24287,20170110,20143,20170109,26718,20170108,24737\n20170112,23526,20170111,24287,20170110,20143,20170109,26718\n20170113,28004,20170112,23526,20170111,24287,20170110,20143\n"}]},{"no":43,"text":"S-043: レシート明細データ（receipt）と顧客データ（customer）を結合し、性別コード（gender_cd）と年代（ageから計算）ごとに売上金額（amount）を合計した売上サマリデータを作成せよ。性別コードは0が男性、1が女性、9が不明を表すものとする。ただし、項目構成は年代、女性の売上金額、男性の売上金額、性別不明の売上金額の4項目とすること（縦に年代、横に性別のクロス集計）。また、年代は10歳ごとの階級とすること。","solutions":[{"no":1,"sql":"DROP TABLE IF EXISTS sales_summary;\n\nCREATE TABLE sales_summary AS\n    WITH gender_era_amount AS (\n        SELECT\n            TRUNC(age / 10) * 10 AS era,\n            c.gender_cd,\n            SUM(r.amount) AS amount\n        FROM customer c\n        JOIN receipt r\n        ON\n            c.customer_id = r.customer_id\n        GROUP BY\n            era,\n            c.gender_cd\n    )\n    SELECT\n        era,\n        SUM(CASE WHEN gender_cd = '0' THEN amount END) AS male,\n        SUM(CASE WHEN gender_cd = '1' THEN amount END) AS female,\n        SUM(CASE WHEN gender_cd = '9' THEN amount END) AS unknown\n    FROM gender_era_amount\n    GROUP BY\n        era\n    ORDER BY\n        era\n;\n\nSELECT\n    *\nFROM sales_summary\n;","expectedCsv":"era,male,female,unknown\n10,1591,149836,4317\n20,72940,1363724,44328\n30,177322,693047,50441\n40,19355,9320791,483512\n50,54320,6685192,342923\n60,272469,987741,71418\n70,13435,29764,2427\n80,46360,262923,5111\n90,null,6260,null\n"}]},{"no":44,"text":"S-044: 043で作成した売上サマリデータ（sales_summary）は性別の売上を横持ちさせたものであった。このデータから性別を縦持ちさせ、年代、性別コード、売上金額の3項目に変換せよ。ただし、性別コードは男性を\"00\"、女性を\"01\"、不明を\"99\"とする。\n\nS-043: レシート明細データ（receipt）と顧客データ（customer）を結合し、性別コード（gender_cd）と年代（ageから計算）ごとに売上金額（amount）を合計した売上サマリデータを作成せよ。性別コードは0が男性、1が女性、9が不明を表すものとする。ただし、項目構成は年代、女性の売上金額、男性の売上金額、性別不明の売上金額の4項目とすること（縦に年代、横に性別のクロス集計）。また、年代は10歳ごとの階級とすること。","solutions":[{"no":1,"sql":"-- SQL向きではないため、やや強引に記載する（カテゴリ数が多いときはとても長いSQLとなってしまう点に注意）\nSELECT era, '00' AS gender_cd , male AS amount FROM sales_summary\nUNION ALL\nSELECT era, '01' AS gender_cd, female AS amount FROM sales_summary\nUNION ALL\nSELECT era, '99' AS gender_cd, unknown AS amount FROM sales_summary\n;","expectedCsv":"era,gender_cd,amount\n10,00,1591\n20,00,72940\n30,00,177322\n40,00,19355\n50,00,54320\n60,00,272469\n70,00,13435\n80,00,46360\n90,00,null\n10,01,149836\n20,01,1363724\n30,01,693047\n40,01,9320791\n50,01,6685192\n60,01,987741\n70,01,29764\n80,01,262923\n90,01,6260\n10,99,4317\n20,99,44328\n30,99,50441\n40,99,483512\n50,99,342923\n60,99,71418\n70,99,2427\n80,99,5111\n90,99,null\n"}]},{"no":45,"text":"S-045: 顧客データ（customer）の生年月日（birth_day）は日付型でデータを保有している。これをYYYYMMDD形式の文字列に変換し、顧客ID（customer_id）とともに10件表示せよ。","solutions":[{"no":1,"sql":"SELECT\n    customer_id, \n    TO_CHAR(birth_day, 'YYYYMMDD') AS birth_day\nFROM customer \nLIMIT 10\n;","expectedCsv":"customer_id,birth_day\nCS021313000114,19810429\nCS037613000071,19520401\nCS031415000172,19761004\nCS028811000001,19330327\nCS001215000145,19950329\nCS020401000016,19740915\nCS015414000103,19770809\nCS029403000008,19730817\nCS015804000004,19310502\nCS033513000180,19620711\n"}]},{"no":46,"text":"S-046: 顧客データ（customer）の申し込み日（application_date）はYYYYMMDD形式の文字列型でデータを保有している。これを日付型に変換し、顧客ID（customer_id）とともに10件表示せよ。","solutions":[{"no":1,"sql":"SELECT\n    customer_id,\n    TO_DATE(application_date, 'YYYYMMDD') AS application_date\nFROM customer\nLIMIT 10\n;","expectedCsv":"customer_id,application_date\nCS021313000114,2015-09-05\nCS037613000071,2015-04-14\nCS031415000172,2015-05-29\nCS028811000001,2016-01-15\nCS001215000145,2017-06-05\nCS020401000016,2015-02-25\nCS015414000103,2015-07-22\nCS029403000008,2015-05-15\nCS015804000004,2015-06-07\nCS033513000180,2015-07-28\n"}]},{"no":47,"text":"S-047: レシート明細データ（receipt）の売上日（sales_ymd）はYYYYMMDD形式の数値型でデータを保有している。これを日付型に変換し、レシート番号(receipt_no)、レシートサブ番号（receipt_sub_no）とともに10件表示せよ。","solutions":[{"no":1,"sql":"SELECT  \n    receipt_no, \n    receipt_sub_no,\n    TO_DATE(CAST(sales_ymd AS VARCHAR), 'YYYYMMDD') AS sales_ymd\nFROM receipt \nLIMIT 10\n;","expectedCsv":"receipt_no,receipt_sub_no,sales_ymd\n112,1,2018-11-03\n1132,2,2018-11-18\n1102,1,2017-07-12\n1132,1,2019-02-05\n1102,2,2018-08-21\n1112,1,2019-06-05\n1102,2,2018-12-05\n1102,1,2019-09-22\n1112,2,2017-05-04\n1102,1,2019-10-10\n"}]},{"no":48,"text":"S-048: レシート明細データ（receipt）の売上エポック秒（sales_epoch）は数値型のUNIX秒でデータを保有している。これを日付型に変換し、レシート番号(receipt_no)、レシートサブ番号（receipt_sub_no）とともに10件表示せよ。","solutions":[{"no":1,"sql":"SELECT \n    receipt_no,\n    receipt_sub_no,\n    CAST(TO_TIMESTAMP(sales_epoch) AS DATE) AS sales_ymd\nFROM receipt \nLIMIT 10\n;","expectedCsv":"receipt_no,receipt_sub_no,sales_ymd\n112,1,2018-11-03\n1132,2,2018-11-18\n1102,1,2017-07-12\n1132,1,2019-02-05\n1102,2,2018-08-21\n1112,1,2019-06-05\n1102,2,2018-12-05\n1102,1,2019-09-22\n1112,2,2017-05-04\n1102,1,2019-10-10\n"}]},{"no":49,"text":"S-049: レシート明細データ（receipt）の売上エポック秒（sales_epoch）を日付型に変換し、「年」だけ取り出してレシート番号(receipt_no)、レシートサブ番号（receipt_sub_no）とともに10件表示せよ。","solutions":[{"no":1,"sql":"SELECT \n    receipt_no, \n    receipt_sub_no,\n    EXTRACT(YEAR FROM TO_TIMESTAMP(sales_epoch)) AS sales_year\nFROM receipt \nLIMIT 10\n;","expectedCsv":"receipt_no,receipt_sub_no,sales_year\n112,1,2018\n1132,2,2018\n1102,1,2017\n1132,1,2019\n1102,2,2018\n1112,1,2019\n1102,2,2018\n1102,1,2019\n1112,2,2017\n1102,1,2019\n"}]},{"no":50,"text":"S-050: レシート明細データ（receipt）の売上エポック秒（sales_epoch）を日付型に変換し、「月」だけ取り出してレシート番号(receipt_no)、レシートサブ番号（receipt_sub_no）とともに10件表示せよ。なお、「月」は0埋め2桁で取り出すこと。","solutions":[{"no":1,"sql":"SELECT \n    receipt_no, \n    receipt_sub_no,\n    TO_CHAR(\n        EXTRACT(MONTH FROM TO_TIMESTAMP(sales_epoch)), \n        'FM00'\n    ) AS sales_month\nFROM receipt\nLIMIT 10\n;","expectedCsv":"receipt_no,receipt_sub_no,sales_month\n112,1,11\n1132,2,11\n1102,1,07\n1132,1,02\n1102,2,08\n1112,1,06\n1102,2,12\n1102,1,09\n1112,2,05\n1102,1,10\n"}]},{"no":51,"text":"S-051: レシート明細データ（receipt）の売上エポック秒(sales_epoch)を日付型に変換し、「日」だけ取り出してレシート番号(receipt_no)、レシートサブ番号（receipt_sub_no）とともに10件表示せよ。なお、「日」は0埋め2桁で取り出すこと。","solutions":[{"no":1,"sql":"SELECT \n    receipt_no, receipt_sub_no,\n    TO_CHAR(EXTRACT(DAY FROM TO_TIMESTAMP(sales_epoch)), 'FM00') AS sales_day\nFROM receipt LIMIT 10\n;","expectedCsv":"receipt_no,receipt_sub_no,sales_day\n112,1,03\n1132,2,18\n1102,1,12\n1132,1,05\n1102,2,21\n1112,1,05\n1102,2,05\n1102,1,22\n1112,2,04\n1102,1,10\n"}]},{"no":52,"text":"S-052: レシート明細データ（receipt）の売上金額（amount）を顧客ID（customer_id）ごとに合計の上、売上金額合計に対して2,000円以下を0、2,000円より大きい金額を1に二値化し、顧客ID、売上金額合計とともに10件表示せよ。ただし、顧客IDが\"Z\"から始まるのものは非会員を表すため、除外して計算すること。","solutions":[{"no":1,"sql":"SELECT\n    customer_id,\n    SUM(amount) AS sum_amount,\n    CASE\n        WHEN SUM(amount) > 2000 THEN 1\n        ELSE 0\n    END AS sales_flg\nFROM receipt\nWHERE customer_id NOT LIKE 'Z%'\nGROUP BY customer_id\nLIMIT 10\n;","expectedCsv":"customer_id,sum_amount,sales_flg\nCS001311000059,2302,1\nCS004614000122,248,0\nCS003512000043,298,0\nCS011615000061,246,0\nCS029212000033,3604,1\nCS007515000119,7157,1\nCS034515000123,3699,1\nCS004315000058,490,0\nCS026414000014,6671,1\nCS001615000099,768,0\n"}]},{"no":53,"text":"S-053: 顧客データ（customer）の郵便番号（postal_cd）に対し、東京（先頭3桁が100〜209のもの）を1、それ以外のものを0に二値化せよ。さらにレシート明細データ（receipt）と結合し、全期間において売上実績のある顧客数を、作成した二値ごとにカウントせよ。","solutions":[{"no":1,"sql":"WITH cust AS (\n    SELECT\n        customer_id,\n        postal_cd,\n        CASE\n            WHEN CAST(SUBSTR(postal_cd, 1, 3) AS INTEGER) BETWEEN 100 AND 209 THEN 1\n            ELSE 0\n        END AS postal_flg\n    FROM\n        customer\n),\nrect AS(\n    SELECT DISTINCT\n        customer_id\n    FROM\n        receipt\n)\nSELECT \n    c.postal_flg, \n    COUNT(DISTINCT c.customer_id) AS customer_cnt\nFROM\n    cust c\nJOIN\n    rect r\nUSING (customer_id)\nGROUP BY\n    c.postal_flg\n;","expectedCsv":"postal_flg,customer_cnt\n0,3906\n1,4400\n"}]},{"no":54,"text":"S-054: 顧客データ（customer）の住所（address）は、埼玉県、千葉県、東京都、神奈川県のいずれかとなっている。都道府県毎にコード値を作成し、顧客ID、住所とともに10件表示せよ。値は埼玉県を11、千葉県を12、東京都を13、神奈川県を14とすること。","solutions":[{"no":1,"sql":"-- SQL向きではないため、やや強引に記載する（カテゴリ数が多いときはとても長いSQLとなってしまう点に注意）\n-- コード例1（固定で切り出す）\nSELECT\n    customer_id,\n    address,\n    CASE SUBSTR(address,1, 3)\n        WHEN '埼玉県' THEN '11'\n        WHEN '千葉県' THEN '12'\n        WHEN '東京都' THEN '13'\n        WHEN '神奈川' THEN '14'\n    END AS prefecture_cd\nFROM\n    customer\nLIMIT 10\n;","expectedCsv":"customer_id,address,prefecture_cd\nCS021313000114,神奈川県伊勢原市粟窪**********,14\nCS037613000071,東京都江東区南砂**********,13\nCS031415000172,東京都渋谷区代々木**********,13\nCS028811000001,神奈川県横浜市泉区和泉町**********,14\nCS001215000145,東京都大田区仲六郷**********,13\nCS020401000016,東京都板橋区若木**********,13\nCS015414000103,東京都江東区北砂**********,13\nCS029403000008,千葉県浦安市海楽**********,12\nCS015804000004,東京都江東区北砂**********,13\nCS033513000180,神奈川県横浜市旭区善部町**********,14\n"},{"no":2,"sql":"-- コード例2（正規表現を使う）\nSELECT\n    customer_id,\n    address,\n    CASE SUBSTRING(address, '^.*?[都道府県]')\n        WHEN '埼玉県' THEN '11'\n        WHEN '千葉県' THEN '12'\n        WHEN '東京都' THEN '13'\n        WHEN '神奈川県' THEN '14'\n    END AS prefecture_cd\nFROM\n    customer\nLIMIT 10\n;","expectedCsv":"customer_id,address,prefecture_cd\nCS021313000114,神奈川県伊勢原市粟窪**********,14\nCS037613000071,東京都江東区南砂**********,13\nCS031415000172,東京都渋谷区代々木**********,13\nCS028811000001,神奈川県横浜市泉区和泉町**********,14\nCS001215000145,東京都大田区仲六郷**********,13\nCS020401000016,東京都板橋区若木**********,13\nCS015414000103,東京都江東区北砂**********,13\nCS029403000008,千葉県浦安市海楽**********,12\nCS015804000004,東京都江東区北砂**********,13\nCS033513000180,神奈川県横浜市旭区善部町**********,14\n"},{"no":3,"sql":"-- コード例3（LIKEを使う）\nSELECT\n    customer_id,\n    address,\n    CASE\n        WHEN address LIKE '埼玉県%' THEN '11'\n        WHEN address LIKE '千葉県%' THEN '12'\n        WHEN address LIKE '東京都%' THEN '13'\n        WHEN address LIKE '神奈川県%' THEN '14'\n    END AS prefecture_cd\nFROM\n    customer\nLIMIT 10\n;","expectedCsv":"customer_id,address,prefecture_cd\nCS021313000114,神奈川県伊勢原市粟窪**********,14\nCS037613000071,東京都江東区南砂**********,13\nCS031415000172,東京都渋谷区代々木**********,13\nCS028811000001,神奈川県横浜市泉区和泉町**********,14\nCS001215000145,東京都大田区仲六郷**********,13\nCS020401000016,東京都板橋区若木**********,13\nCS015414000103,東京都江東区北砂**********,13\nCS029403000008,千葉県浦安市海楽**********,12\nCS015804000004,東京都江東区北砂**********,13\nCS033513000180,神奈川県横浜市旭区善部町**********,14\n"}]},{"no":55,"text":"S-055: レシート明細（receipt）データの売上金額（amount）を顧客ID（customer_id）ごとに合計し、その合計金額の四分位点を求めよ。その上で、顧客ごとの売上金額合計に対して以下の基準でカテゴリ値を作成し、顧客ID、売上金額合計とともに10件表示せよ。カテゴリ値は順に1〜4とする。\n\n最小値以上第1四分位未満 ・・・ 1を付与\n第1四分位以上第2四分位未満 ・・・ 2を付与\n第2四分位以上第3四分位未満 ・・・ 3を付与\n第3四分位以上 ・・・ 4を付与","solutions":[{"no":1,"sql":"WITH sales_amount AS(\n    SELECT\n        customer_id,\n        SUM(amount) AS sum_amount\n    FROM\n        receipt\n    GROUP BY\n        customer_id\n),\nsales_pct AS (\n    SELECT\n        PERCENTILE_CONT(0.25) WITHIN GROUP(ORDER BY sum_amount) AS pct25,\n        PERCENTILE_CONT(0.50) WITHIN GROUP(ORDER BY sum_amount) AS pct50,\n        PERCENTILE_CONT(0.75) WITHIN GROUP(ORDER BY sum_amount) AS pct75\n    FROM\n        sales_amount\n)\nSELECT\n    a.customer_id,\n    a.sum_amount,\n    CASE\n        WHEN a.sum_amount < pct25 THEN 1\n        WHEN pct25 <= a.sum_amount AND a.sum_amount < pct50 THEN 2\n        WHEN pct50 <= a.sum_amount AND a.sum_amount < pct75 THEN 3\n        WHEN pct75 <= a.sum_amount THEN 4\n    END AS pct_group\nFROM sales_amount a\nCROSS JOIN sales_pct p\nLIMIT 10\n;","expectedCsv":"customer_id,sum_amount,pct_group\nCS001311000059,2302,3\nCS004614000122,248,1\nCS003512000043,298,1\nCS011615000061,246,1\nCS029212000033,3604,3\nCS007515000119,7157,4\nCS034515000123,3699,4\nCS004315000058,490,1\nCS026414000014,6671,4\nCS001615000099,768,2\n"}]},{"no":56,"text":"S-056: 顧客データ（customer）の年齢（age）をもとに10歳刻みで年代を算出し、顧客ID（customer_id）、生年月日（birth_day）とともに10件表示せよ。ただし、60歳以上は全て60歳代とすること。年代を表すカテゴリ名は任意とする。","solutions":[{"no":1,"sql":"SELECT\n    customer_id,\n    birth_day,\n    -- 確認用の項目\n    -- age,\n    LEAST(CAST(TRUNC(age / 10) * 10 AS INTEGER), 60) AS era\nFROM\n    customer\nLIMIT 10\n;","expectedCsv":"customer_id,birth_day,era\nCS021313000114,1981-04-29,30\nCS037613000071,1952-04-01,60\nCS031415000172,1976-10-04,40\nCS028811000001,1933-03-27,60\nCS001215000145,1995-03-29,20\nCS020401000016,1974-09-15,40\nCS015414000103,1977-08-09,40\nCS029403000008,1973-08-17,40\nCS015804000004,1931-05-02,60\nCS033513000180,1962-07-11,50\n"}]},{"no":57,"text":"S-057: 056の抽出結果と性別コード（gender_cd）により、新たに性別×年代の組み合わせを表すカテゴリデータを作成し、10件表示せよ。組み合わせを表すカテゴリの値はgender_cdと年代を組み合わせた文字列(例: 030)とする。\n\n  S-056: 顧客データ（customer）の年齢（age）をもとに10歳刻みで年代を算出し、顧客ID（customer_id）、生年月日（birth_day）とともに10件表示せよ。ただし、60歳以上は全て60歳代とすること。年代を表すカテゴリ名は任意とする。","solutions":[{"no":1,"sql":"-- 性別コード１桁と年代コード２桁を連結した性年代コードを生成する\nSELECT\n    customer_id,\n    birth_day,\n    gender_cd || TO_CHAR(LEAST(CAST(TRUNC(age / 10) * 10 AS INTEGER), 60), 'FM00') AS gender_era\nFROM\n    customer\nLIMIT 10\n;","expectedCsv":"customer_id,birth_day,gender_era\nCS021313000114,1981-04-29,130\nCS037613000071,1952-04-01,960\nCS031415000172,1976-10-04,140\nCS028811000001,1933-03-27,160\nCS001215000145,1995-03-29,120\nCS020401000016,1974-09-15,040\nCS015414000103,1977-08-09,140\nCS029403000008,1973-08-17,040\nCS015804000004,1931-05-02,060\nCS033513000180,1962-07-11,150\n"}]},{"no":58,"text":"S-058: 顧客データ（customer）の性別コード（gender_cd）をダミー変数化し、顧客ID（customer_id）とともに10件表示せよ。","solutions":[{"no":1,"sql":"-- カテゴリ数が多いときはとても長いSQLとなってしまう点に注意\n-- カテゴリを一つ減らしたい場合はCASE文をどれか一つ削ればOK\nSELECT\n    customer_id,\n    CASE WHEN gender_cd = '0' THEN '1' ELSE '0' END AS gender_cd_0,\n    CASE WHEN gender_cd = '1' THEN '1' ELSE '0' END AS gender_cd_1,\n    CASE WHEN gender_cd = '9' THEN '1' ELSE '0' END AS gender_cd_9\nFROM\n    customer\nLIMIT 10\n;","expectedCsv":"customer_id,gender_cd_0,gender_cd_1,gender_cd_9\nCS021313000114,0,1,0\nCS037613000071,0,0,1\nCS031415000172,0,1,0\nCS028811000001,0,1,0\nCS001215000145,0,1,0\nCS020401000016,1,0,0\nCS015414000103,0,1,0\nCS029403000008,1,0,0\nCS015804000004,1,0,0\nCS033513000180,0,1,0\n"}]},{"no":59,"text":"S-059: レシート明細データ（receipt）の売上金額（amount）を顧客ID（customer_id）ごとに合計し、売上金額合計を平均0、標準偏差1に標準化して顧客ID、売上金額合計とともに10件表示せよ。標準化に使用する標準偏差は、分散の平方根、もしくは不偏分散の平方根のどちらでも良いものとする。ただし、顧客IDが\"Z\"から始まるのものは非会員を表すため、除外して計算すること。","solutions":[{"no":1,"sql":"-- コード例1（STDDEV_POPで標準化）\nWITH sales_amount AS(\n    SELECT\n        customer_id,\n        SUM(amount) AS sum_amount\n    FROM\n        receipt\n    WHERE\n        customer_id NOT LIKE 'Z%'\n    GROUP BY\n        customer_id\n),\nstats_amount AS (\n    SELECT\n        AVG(sum_amount) AS avg_amount,\n        STDDEV_POP(sum_amount) AS stddev_amount\n    FROM\n        sales_amount\n)\nSELECT\n    customer_id,\n    sum_amount,\n    (sum_amount - avg_amount) / stddev_amount AS std_amount\nFROM sales_amount\nCROSS JOIN stats_amount\nLIMIT 10\n;","expectedCsv":"customer_id,sum_amount,std_amount\nCS001311000059,2302,-0.09032946448390523062\nCS004614000122,248,-0.84533488878695858131\nCS003512000043,298,-0.82695598361891930792\nCS011615000061,246,-0.84607004499368015224\nCS029212000033,3604,0.38825722609183744835\nCS007515000119,7157,1.6942622273327082\nCS034515000123,3699,0.42317714591111206778\nCS004315000058,490,-0.75638098777364849812\nCS026414000014,6671,1.5156192690993665\nCS001615000099,768,-0.65419427503935013810\n"},{"no":2,"sql":"-- コード例2（STDDEV_SAMPで標準化、コード例2と若干値が変わる）\nWITH sales_amount AS(\n    SELECT\n        customer_id,\n        SUM(amount) AS sum_amount\n    FROM\n        receipt\n    WHERE\n        customer_id NOT LIKE 'Z%'\n    GROUP BY\n        customer_id\n),\nstats_amount AS (\n    SELECT\n        AVG(sum_amount) AS avg_amount,\n        STDDEV_SAMP(sum_amount) AS stddev_amount\n    FROM\n        sales_amount\n)\nSELECT\n    customer_id,\n    sum_amount,\n    (sum_amount - avg_amount) / stddev_amount AS std_amount\nFROM sales_amount\nCROSS JOIN stats_amount\nLIMIT 10\n;","expectedCsv":"customer_id,sum_amount,std_amount\nCS001311000059,2302,-0.09032402671702291270\nCS004614000122,248,-0.84528400025253654164\nCS003512000043,298,-0.82690620148098070841\nCS011615000061,246,-0.84601911220339877497\nCS029212000033,3604,0.38823385329429098451\nCS007515000119,7157,1.6941602340010485\nCS034515000123,3699,0.42315167096024706764\nCS004315000058,490,-0.75633545419820630882\nCS026414000014,6671,1.5155280299415258\nCS001615000099,768,-0.65415489302835587608\n"}]},{"no":60,"text":"S-060: レシート明細データ（receipt）の売上金額（amount）を顧客ID（customer_id）ごとに合計し、売上金額合計を最小値0、最大値1に正規化して顧客ID、売上金額合計とともに10件表示せよ。ただし、顧客IDが\"Z\"から始まるのものは非会員を表すため、除外して計算すること。","solutions":[{"no":1,"sql":"WITH sales_amount AS(\n    SELECT\n        customer_id,\n        SUM(amount) AS sum_amount\n    FROM\n        receipt\n    WHERE\n        customer_id NOT LIKE 'Z%'\n    GROUP BY\n        customer_id\n),\nstats_amount AS (\n    SELECT\n        MAX(sum_amount) AS max_amount,\n        MIN(sum_amount) AS min_amount\n    FROM\n        sales_amount\n)\nSELECT\n    customer_id,\n    sum_amount,\n    1.0 * (sum_amount - min_amount)\n            / (max_amount -  min_amount) AS scale_amount\nFROM sales_amount\nCROSS JOIN stats_amount\nLIMIT 10\n;","expectedCsv":"customer_id,sum_amount,scale_amount\nCS001311000059,2302,0.09697601668404588113\nCS004614000122,248,0.00773375043448036149\nCS003512000043,298,0.00990615224191866528\nCS011615000061,246,0.00764685436218282934\nCS029212000033,3604,0.15354535974973931178\nCS007515000119,7157,0.30791623218630517901\nCS034515000123,3699,0.15767292318387208898\nCS004315000058,490,0.01824817518248175182\nCS026414000014,6671,0.28680048661800486618\nCS001615000099,768,0.03032672923183872089\n"}]},{"no":61,"text":"S-061: レシート明細データ（receipt）の売上金額（amount）を顧客ID（customer_id）ごとに合計し、売上金額合計に0.5を加えたうえで常用対数化（底10）して顧客ID、売上金額合計とともに10件表示せよ。ただし、顧客IDが\"Z\"から始まるのものは非会員を表すため、除外して計算すること。","solutions":[{"no":1,"sql":"SELECT\n    customer_id,\n    sum_amount,\n    LOG(sum_amount + 0.5) AS log_amount\nFROM\n(\n    SELECT\n        customer_id,\n        SUM(amount) AS sum_amount\n    FROM\n        receipt\n    WHERE\n        customer_id NOT LIKE 'Z%'\n    GROUP BY\n        customer_id\n) AS sum_amount_tbl\nLIMIT 10\n;","expectedCsv":"customer_id,sum_amount,log_amount\nCS001311000059,2302,3.3621996388688865\nCS004614000122,248,2.3953263930693509\nCS003512000043,298,2.4749443354653879\nCS011615000061,246,2.3918169236132488\nCS029212000033,3604,3.5568450298595813\nCS007515000119,7157,3.8547613566936362\nCS034515000123,3699,3.5681430316577019\nCS004315000058,490,2.6906390117159673\nCS026414000014,6671,3.8242234903608168\nCS001615000099,768,2.8856438718357639\n"}]},{"no":62,"text":"S-062: レシート明細データ（receipt）の売上金額（amount）を顧客ID（customer_id）ごとに合計し、売上金額合計に0.5を加えたうえで自然対数化（底e）して顧客ID、売上金額合計とともに10件表示せよ。ただし、顧客IDが\"Z\"から始まるのものは非会員を表すため、除外して計算すること。","solutions":[{"no":1,"sql":"SELECT\n    customer_id,\n    sum_amount,\n    LN(sum_amount + 0.5) AS log_amount\nFROM\n(\n    SELECT\n        customer_id,\n        SUM(amount) AS sum_amount\n    FROM\n        receipt\n    WHERE\n        customer_id NOT LIKE 'Z%'\n    GROUP BY\n        customer_id\n) AS sum_amount_tbl\nLIMIT 10\n;","expectedCsv":"customer_id,sum_amount,log_amount\nCS001311000059,2302,7.7417507681294619\nCS004614000122,248,5.5154428455366834\nCS003512000043,298,5.6987699328326568\nCS011615000061,246,5.5073619934827448\nCS029212000033,3604,8.1899383438446333\nCS007515000119,7157,8.8759160369722701\nCS034515000123,3699,8.2159529543656056\nCS004315000058,490,6.1954252790054178\nCS026414000014,6671,8.8056000011824754\nCS001615000099,768,6.6444405629786506\n"}]},{"no":63,"text":"S-063: 商品データ（product）の単価（unit_price）と原価（unit_cost）から各商品の利益額を算出し、結果を10件表示せよ。","solutions":[{"no":1,"sql":"SELECT\n    product_cd, \n    unit_price, \n    unit_cost,\n    unit_price - unit_cost AS unit_profit\nFROM\n    product\nLIMIT 10\n;","expectedCsv":"product_cd,unit_price,unit_cost,unit_profit\nP040101001,198,149,49\nP040101002,218,164,54\nP040101003,230,173,57\nP040101004,248,186,62\nP040101005,268,201,67\nP040101006,298,224,74\nP040101007,338,254,84\nP040101008,420,315,105\nP040101009,498,374,124\nP040101010,580,435,145\n"}]},{"no":64,"text":"S-064: 商品データ（product）の単価（unit_price）と原価（unit_cost）から、各商品の利益率の全体平均を算出せよ。ただし、単価と原価には欠損が生じていることに注意せよ。","solutions":[{"no":1,"sql":"SELECT\n    AVG((unit_price * 1.0 - unit_cost) / unit_price) AS unit_profit_rate\nFROM\n    product\nLIMIT 10\n;","expectedCsv":"unit_profit_rate\n0.24911389885177001279\n"}]},{"no":65,"text":"S-065: 商品データ（product）の各商品について、利益率が30%となる新たな単価を求めよ。ただし、1円未満は切り捨てること。そして結果を10件表示させ、利益率がおよそ30％付近であることを確認せよ。ただし、単価（unit_price）と原価（unit_cost）には欠損が生じていることに注意せよ。","solutions":[{"no":1,"sql":"WITH new_price_tbl AS (\n    SELECT\n        product_cd, \n        unit_price, \n        unit_cost,\n        TRUNC(unit_cost / 0.7) AS new_price\n    FROM\n        product\n) \nSELECT\n    *,\n    (new_price - unit_cost) / new_price AS new_profit_rate\nFROM\n    new_price_tbl\nLIMIT 10\n;","expectedCsv":"product_cd,unit_price,unit_cost,new_price,new_profit_rate\nP040101001,198,149,212,0.29716981132075471698\nP040101002,218,164,234,0.29914529914529914530\nP040101003,230,173,247,0.29959514170040485830\nP040101004,248,186,265,0.29811320754716981132\nP040101005,268,201,287,0.29965156794425087108\nP040101006,298,224,320,0.30000000000000000000\nP040101007,338,254,362,0.29834254143646408840\nP040101008,420,315,450,0.30000000000000000000\nP040101009,498,374,534,0.29962546816479400749\nP040101010,580,435,621,0.29951690821256038647\n"}]},{"no":66,"text":"S-066: 商品データ（product）の各商品について、利益率が30%となる新たな単価を求めよ。今回は、1円未満を丸めること（四捨五入または偶数への丸めで良い）。そして結果を10件表示させ、利益率がおよそ30％付近であることを確認せよ。ただし、単価（unit_price）と原価（unit_cost）には欠損が生じていることに注意せよ。","solutions":[{"no":1,"sql":"WITH new_price_tbl AS (\n    SELECT\n        product_cd, \n        unit_price, \n        unit_cost,\n        ROUND(unit_cost / 0.7) AS new_price\n    FROM\n        product\n) \nSELECT\n    *,\n    (new_price - unit_cost) / new_price AS new_profit_rate\nFROM\n    new_price_tbl\nLIMIT 10\n;","expectedCsv":"product_cd,unit_price,unit_cost,new_price,new_profit_rate\nP040101001,198,149,213,0.30046948356807511737\nP040101002,218,164,234,0.29914529914529914530\nP040101003,230,173,247,0.29959514170040485830\nP040101004,248,186,266,0.30075187969924812030\nP040101005,268,201,287,0.29965156794425087108\nP040101006,298,224,320,0.30000000000000000000\nP040101007,338,254,363,0.30027548209366391185\nP040101008,420,315,450,0.30000000000000000000\nP040101009,498,374,534,0.29962546816479400749\nP040101010,580,435,621,0.29951690821256038647\n"}]},{"no":67,"text":"S-067: 商品データ（product）の各商品について、利益率が30%となる新たな単価を求めよ。今回は、1円未満を切り上げること。そして結果を10件表示させ、利益率がおよそ30％付近であることを確認せよ。ただし、単価（unit_price）と原価（unit_cost）には欠損が生じていることに注意せよ。","solutions":[{"no":1,"sql":"WITH new_price_tbl AS (\n    SELECT\n        product_cd, \n        unit_price, \n        unit_cost,\n        CEIL(unit_cost / 0.7) AS new_price\n    FROM\n        product\n) \nSELECT\n    *,\n    (new_price - unit_cost) / new_price AS new_profit_rate\nFROM\n    new_price_tbl\nLIMIT 10\n;","expectedCsv":"product_cd,unit_price,unit_cost,new_price,new_profit_rate\nP040101001,198,149,213,0.30046948356807511737\nP040101002,218,164,235,0.30212765957446808511\nP040101003,230,173,248,0.30241935483870967742\nP040101004,248,186,266,0.30075187969924812030\nP040101005,268,201,288,0.30208333333333333333\nP040101006,298,224,320,0.30000000000000000000\nP040101007,338,254,363,0.30027548209366391185\nP040101008,420,315,450,0.30000000000000000000\nP040101009,498,374,535,0.30093457943925233645\nP040101010,580,435,622,0.30064308681672025723\n"}]},{"no":68,"text":"S-068: 商品データ（product）の各商品について、消費税率10％の税込み金額を求めよ。1円未満の端数は切り捨てとし、結果を10件表示せよ。ただし、単価（unit_price）には欠損が生じていることに注意せよ。","solutions":[{"no":1,"sql":"SELECT\n    product_cd,\n    unit_price,\n    TRUNC(unit_price * 1.1) AS tax_price\nFROM\n    product\nLIMIT 10\n;","expectedCsv":"product_cd,unit_price,tax_price\nP040101001,198,217\nP040101002,218,239\nP040101003,230,253\nP040101004,248,272\nP040101005,268,294\nP040101006,298,327\nP040101007,338,371\nP040101008,420,462\nP040101009,498,547\nP040101010,580,638\n"}]},{"no":69,"text":"S-069: レシート明細データ（receipt）と商品データ（product）を商品コード(product_cd)で結合し、顧客毎に全商品の売上金額合計と、カテゴリ大区分コード（category_major_cd）が\"07\"（瓶詰缶詰）の売上金額合計を計算の上、両者の比率を求めよ。抽出対象はカテゴリ大区分コード\"07\"（瓶詰缶詰）の売上実績がある顧客のみとし、結果を10件表示せよ。","solutions":[{"no":1,"sql":"WITH amount_all AS(\n    SELECT\n        customer_id,\n        SUM(amount) AS sum_all\n    FROM\n        receipt\n    GROUP BY\n        customer_id\n),\namount_07 AS (\n    SELECT\n        r.customer_id,\n        SUM(r.amount) AS sum_07\n    FROM\n        receipt r\n    JOIN\n        product p\n    ON\n        r.product_cd = p.product_cd\n    WHERE\n        p.category_major_cd = '07'\n    GROUP BY\n        customer_id\n)\nSELECT\n    amount_all.customer_id,\n    sum_all,\n    sum_07,\n    sum_07 * 1.0 / sum_all AS sales_rate\nFROM\n    amount_all\nJOIN\n    amount_07\nON\n    amount_all.customer_id = amount_07.customer_id\nLIMIT 10\n;","expectedCsv":"customer_id,sum_all,sum_07,sales_rate\nCS001311000059,2302,102,0.04430929626411815812\nCS011615000061,246,98,0.39837398373983739837\nCS029212000033,3604,3604,1.00000000000000000000\nCS007515000119,7157,2832,0.39569652088864049183\nCS034515000123,3699,1202,0.32495268991619356583\nCS026414000014,6671,3142,0.47099385399490331285\nCS001615000099,768,318,0.41406250000000000000\nCS010515000082,1482,553,0.37314439946018893387\nCS019315000045,813,380,0.46740467404674046740\nCS008513000099,1322,210,0.15885022692889561271\n"}]},{"no":70,"text":"S-070: レシート明細データ（receipt）の売上日（sales_ymd）に対し、顧客データ（customer）の会員申込日（application_date）からの経過日数を計算し、顧客ID（customer_id）、売上日、会員申込日とともに経過日数の降順、会員申込日の降順で10件表示せよ（sales_ymdは数値、application_dateは文字列でデータを保持している点に注意）。","solutions":[{"no":1,"sql":"WITH receipt_distinct AS (\n    SELECT distinct\n        customer_id,\n        sales_ymd\n    FROM\n        receipt\n)\nSELECT\n    c.customer_id,\n    r.sales_ymd,\n    c.application_date,\n    EXTRACT(DAY FROM (TO_TIMESTAMP(CAST(r.sales_ymd AS VARCHAR), 'YYYYMMDD') \n                - TO_TIMESTAMP(c.application_date, 'YYYYMMDD'))) AS elapsed_days\nFROM\n    receipt_distinct r\nJOIN\n    customer c\nON\n    r.customer_id = c.customer_id\nLIMIT 10\n;","expectedCsv":"customer_id,sales_ymd,application_date,elapsed_days\nCS025314000050,20190917,20131214,2103\nCS001515000074,20190805,20140308,1976\nCS016211000011,20190807,20140314,1972\nCS016211000011,20190728,20140314,1962\nCS015513000039,20190906,20140510,1945\nCS040515000174,20190901,20140521,1929\nCS019515000038,20190807,20140620,1874\nCS040515000174,20190708,20140521,1874\nCS040515000174,20190630,20140521,1866\nCS012513000197,20190927,20140915,1838\n"}]},{"no":71,"text":"S-071: レシート明細データ（receipt）の売上日（sales_ymd）に対し、顧客データ（customer）の会員申込日（application_date）からの経過月数を計算し、顧客ID（customer_id）、売上日、会員申込日とともに経過月数の降順、売上日の降順で10件表示せよ（sales_ymdは数値、application_dateは文字列でデータを保持している点に注意）。1ヶ月未満は切り捨てること。","solutions":[{"no":1,"sql":"WITH receipt_distinct AS (\n    SELECT DISTINCT\n        customer_id,\n        sales_ymd\n    FROM\n        receipt\n),\ntime_age_tbl AS(\n    SELECT\n        c.customer_id,\n        r.sales_ymd,\n        c.application_date,\n        AGE(TO_TIMESTAMP(CAST(r.sales_ymd AS VARCHAR), 'YYYYMMDD'),\n                    TO_TIMESTAMP(c.application_date, 'YYYYMMDD')) AS time_age\n    FROM\n        receipt_distinct r\n    JOIN\n        customer c\n    ON\n        r.customer_id = c.customer_id\n)\nSELECT\n    customer_id, \n    sales_ymd, \n    application_date,\n    EXTRACT(YEAR FROM time_age) * 12 \n        + EXTRACT(MONTH FROM time_age) AS elapsed_months\nFROM\n    time_age_tbl\nLIMIT 10\n;","expectedCsv":"customer_id,sales_ymd,application_date,elapsed_months\nCS025314000050,20190917,20131214,69\nCS016211000011,20190807,20140314,64\nCS001515000074,20190805,20140308,64\nCS016211000011,20190728,20140314,64\nCS015513000039,20190906,20140510,63\nCS040515000174,20190901,20140521,63\nCS019515000038,20190807,20140620,61\nCS040515000174,20190708,20140521,61\nCS040515000174,20190630,20140521,61\nCS010415000009,20191005,20141003,60\n"}]},{"no":72,"text":"S-072: レシート明細データ（receipt）の売上日（sales_ymd）に対し、顧客データ（customer）の会員申込日（application_date）からの経過年数を計算し、顧客ID（customer_id）、売上日、会員申込日とともに経過年数の降順、販売日の降順、会員申込日の降順で10件表示せよ（sales_ymdは数値、application_dateは文字列でデータを保持している点に注意）。1年未満は切り捨てること。","solutions":[{"no":1,"sql":"WITH receipt_distinct AS (\n    SELECT distinct\n        customer_id,\n        sales_ymd\n    FROM\n        receipt\n)\nSELECT\n    c.customer_id,\n    r.sales_ymd,\n    c.application_date,\n    EXTRACT(YEAR FROM AGE(\n        TO_TIMESTAMP(CAST(r.sales_ymd AS VARCHAR), 'YYYYMMDD'), \n        TO_TIMESTAMP(c.application_date, 'YYYYMMDD'))) AS elapsed_years\nFROM\n    receipt_distinct r\nJOIN\n    customer c\nON\n    r.customer_id = c.customer_id\nLIMIT 10\n;","expectedCsv":"customer_id,sales_ymd,application_date,elapsed_years\nCS010415000009,20191005,20141003,5\nCS012513000197,20190927,20140915,5\nCS025314000050,20190917,20131214,5\nCS015513000039,20190906,20140510,5\nCS040515000174,20190901,20140521,5\nCS019515000038,20190807,20140620,5\nCS016211000011,20190807,20140314,5\nCS001515000074,20190805,20140308,5\nCS016211000011,20190728,20140314,5\nCS040515000174,20190708,20140521,5\n"}]},{"no":73,"text":"S-073: レシート明細データ（receipt）の売上日（sales_ymd）に対し、顧客データ（customer）の会員申込日（application_date）からのエポック秒による経過時間を計算し、顧客ID（customer_id）、売上日、会員申込日とともに経過時間の降順、sales_ymdの降順で10件表示せよ（なお、sales_ymdは数値、application_dateは文字列でデータを保持している点に注意）。なお、時間情報は保有していないため各日付は0時0分0秒を表すものとする。","solutions":[{"no":1,"sql":"WITH receipt_distinct AS (\n    SELECT distinct\n        customer_id,\n        sales_ymd\n    FROM\n        receipt\n)\nSELECT\n    c.customer_id,\n    r.sales_ymd,\n    c.application_date,\n    EXTRACT(EPOCH FROM \n            TO_TIMESTAMP(CAST(r.sales_ymd AS VARCHAR), 'YYYYMMDD') - \n            TO_TIMESTAMP(c.application_date, 'YYYYMMDD')\n    ) AS elapsed_epoch\nFROM\n    receipt_distinct r\nJOIN\n    customer c\nON\n    r.customer_id = c.customer_id\nLIMIT 10\n;","expectedCsv":"customer_id,sales_ymd,application_date,elapsed_epoch\nCS025314000050,20190917,20131214,181699200.000000\nCS001515000074,20190805,20140308,170726400.000000\nCS016211000011,20190807,20140314,170380800.000000\nCS016211000011,20190728,20140314,169516800.000000\nCS015513000039,20190906,20140510,168048000.000000\nCS040515000174,20190901,20140521,166665600.000000\nCS019515000038,20190807,20140620,161913600.000000\nCS040515000174,20190708,20140521,161913600.000000\nCS040515000174,20190630,20140521,161222400.000000\nCS012513000197,20190927,20140915,158803200.000000\n"}]},{"no":74,"text":"S-074: レシート明細データ（receipt）の売上日（sales_ymd）に対し、当該週の月曜日からの経過日数を計算し、売上日、直前の月曜日付とともに10件表示せよ（sales_ymdは数値でデータを保持している点に注意）。","solutions":[{"no":1,"sql":"WITH elapsed_days_tbl AS (\n    SELECT\n        TO_DATE(CAST(sales_ymd AS VARCHAR), 'YYYYMMDD') AS sales_ymd,\n        EXTRACT(DOW FROM (\n            TO_DATE(CAST(sales_ymd AS VARCHAR), 'YYYYMMDD') - 1)) AS elapsed_days\n    FROM\n        receipt\n)\nSELECT\n    sales_ymd,\n    elapsed_days,\n    sales_ymd - CAST(elapsed_days AS INTEGER) AS monday\nFROM \n    elapsed_days_tbl\nLIMIT 10\n;","expectedCsv":"sales_ymd,elapsed_days,monday\n2018-11-03,5,2018-10-29\n2018-11-18,6,2018-11-12\n2017-07-12,2,2017-07-10\n2019-02-05,1,2019-02-04\n2018-08-21,1,2018-08-20\n2019-06-05,2,2019-06-03\n2018-12-05,2,2018-12-03\n2019-09-22,6,2019-09-16\n2017-05-04,3,2017-05-01\n2019-10-10,3,2019-10-07\n"}]}]